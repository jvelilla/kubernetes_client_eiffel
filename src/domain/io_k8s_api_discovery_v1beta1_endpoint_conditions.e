note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_DISCOVERY_V1BETA1_ENDPOINT_CONDITIONS




feature --Access

 	ready: BOOLEAN
    	 -- ready indicates that this endpoint is prepared to receive traffic, according to whatever system is managing the endpoint. A nil value indicates an unknown state. In most cases consumers should interpret this unknown state as ready. For compatibility reasons, ready should never be \"true\" for terminating endpoints.
 	serving: BOOLEAN
    	 -- serving is identical to ready except that it is set regardless of the terminating state of endpoints. This condition should be set to true for a ready endpoint that is terminating. If nil, consumers should defer to the ready condition. This field can be enabled with the EndpointSliceTerminatingCondition feature gate.
 	terminating: BOOLEAN
    	 -- terminating indicates that this endpoint is terminating. A nil value indicates an unknown state. Consumers should interpret this unknown state to mean that the endpoint is not terminating. This field can be enabled with the EndpointSliceTerminatingCondition feature gate.

feature -- Change Element

    set_ready (a_name: like ready)
        -- Set 'ready' with 'a_name'.
      do
        ready := a_name
      ensure
        ready_set: ready = a_name
      end

    set_serving (a_name: like serving)
        -- Set 'serving' with 'a_name'.
      do
        serving := a_name
      ensure
        serving_set: serving = a_name
      end

    set_terminating (a_name: like terminating)
        -- Set 'terminating' with 'a_name'.
      do
        terminating := a_name
      ensure
        terminating_set: terminating = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_DISCOVERY_V1BETA1_ENDPOINT_CONDITIONS%N")
        if attached ready as l_ready then
          Result.append ("%Nready:")
          Result.append (l_ready.out)
          Result.append ("%N")
        end
        if attached serving as l_serving then
          Result.append ("%Nserving:")
          Result.append (l_serving.out)
          Result.append ("%N")
        end
        if attached terminating as l_terminating then
          Result.append ("%Nterminating:")
          Result.append (l_terminating.out)
          Result.append ("%N")
        end
      end
end

