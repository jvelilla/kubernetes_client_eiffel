note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_APISERVERINTERNAL_V1ALPHA1_SERVER_STORAGE_VERSION




feature --Access

    api_server_id: detachable STRING_32
      -- The ID of the reporting API server.
    decodable_versions: detachable LIST [STRING_32]
      -- The API server can decode objects encoded in these versions. The encodingVersion must be included in the decodableVersions.
    encoding_version: detachable STRING_32
      -- The API server encodes the object to this version when persisting it in the backend (e.g., etcd).

feature -- Change Element

    set_api_server_id (a_name: like api_server_id)
        -- Set 'api_server_id' with 'a_name'.
      do
        api_server_id := a_name
      ensure
        api_server_id_set: api_server_id = a_name
      end

    set_decodable_versions (a_name: like decodable_versions)
        -- Set 'decodable_versions' with 'a_name'.
      do
        decodable_versions := a_name
      ensure
        decodable_versions_set: decodable_versions = a_name
      end

    set_encoding_version (a_name: like encoding_version)
        -- Set 'encoding_version' with 'a_name'.
      do
        encoding_version := a_name
      ensure
        encoding_version_set: encoding_version = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_APISERVERINTERNAL_V1ALPHA1_SERVER_STORAGE_VERSION%N")
        if attached api_server_id as l_api_server_id then
          Result.append ("%Napi_server_id:")
          Result.append (l_api_server_id.out)
          Result.append ("%N")
        end
        if attached decodable_versions as l_decodable_versions then
          across l_decodable_versions as ic loop
            Result.append ("%N decodable_versions:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached encoding_version as l_encoding_version then
          Result.append ("%Nencoding_version:")
          Result.append (l_encoding_version.out)
          Result.append ("%N")
        end
      end
end

