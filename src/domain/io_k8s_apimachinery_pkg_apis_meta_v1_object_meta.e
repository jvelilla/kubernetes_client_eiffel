note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_APIMACHINERY_PKG_APIS_META_V1_OBJECT_META




feature --Access

    annotations: detachable STRING_TABLE [STRING_32]
      -- Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    cluster_name: detachable STRING_32
      -- The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
    creation_timestamp: detachable DATE_TIME
      -- Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
 	deletion_grace_period_seconds: INTEGER_64
    	 -- Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
    deletion_timestamp: detachable DATE_TIME
      -- Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
    finalizers: detachable LIST [STRING_32]
      -- Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
    generate_name: detachable STRING_32
      -- GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.  If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).  Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
 	generation: INTEGER_64
    	 -- A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
    labels: detachable STRING_TABLE [STRING_32]
      -- Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    managed_fields: detachable LIST [IO_K8S_APIMACHINERY_PKG_APIS_META_V1_MANAGED_FIELDS_ENTRY]
      -- ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.
    name: detachable STRING_32
      -- Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    namespace: detachable STRING_32
      -- Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.  Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
    owner_references: detachable LIST [IO_K8S_APIMACHINERY_PKG_APIS_META_V1_OWNER_REFERENCE]
      -- List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
    resource_version: detachable STRING_32
      -- An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.  Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    self_link: detachable STRING_32
      -- SelfLink is a URL representing this object. Populated by the system. Read-only.  DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.
    uid: detachable STRING_32
      -- UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.  Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids

feature -- Change Element

    set_annotations (a_name: like annotations)
        -- Set 'annotations' with 'a_name'.
      do
        annotations := a_name
      ensure
        annotations_set: annotations = a_name
      end

    set_cluster_name (a_name: like cluster_name)
        -- Set 'cluster_name' with 'a_name'.
      do
        cluster_name := a_name
      ensure
        cluster_name_set: cluster_name = a_name
      end

    set_creation_timestamp (a_name: like creation_timestamp)
        -- Set 'creation_timestamp' with 'a_name'.
      do
        creation_timestamp := a_name
      ensure
        creation_timestamp_set: creation_timestamp = a_name
      end

    set_deletion_grace_period_seconds (a_name: like deletion_grace_period_seconds)
        -- Set 'deletion_grace_period_seconds' with 'a_name'.
      do
        deletion_grace_period_seconds := a_name
      ensure
        deletion_grace_period_seconds_set: deletion_grace_period_seconds = a_name
      end

    set_deletion_timestamp (a_name: like deletion_timestamp)
        -- Set 'deletion_timestamp' with 'a_name'.
      do
        deletion_timestamp := a_name
      ensure
        deletion_timestamp_set: deletion_timestamp = a_name
      end

    set_finalizers (a_name: like finalizers)
        -- Set 'finalizers' with 'a_name'.
      do
        finalizers := a_name
      ensure
        finalizers_set: finalizers = a_name
      end

    set_generate_name (a_name: like generate_name)
        -- Set 'generate_name' with 'a_name'.
      do
        generate_name := a_name
      ensure
        generate_name_set: generate_name = a_name
      end

    set_generation (a_name: like generation)
        -- Set 'generation' with 'a_name'.
      do
        generation := a_name
      ensure
        generation_set: generation = a_name
      end

    set_labels (a_name: like labels)
        -- Set 'labels' with 'a_name'.
      do
        labels := a_name
      ensure
        labels_set: labels = a_name
      end

    set_managed_fields (a_name: like managed_fields)
        -- Set 'managed_fields' with 'a_name'.
      do
        managed_fields := a_name
      ensure
        managed_fields_set: managed_fields = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_namespace (a_name: like namespace)
        -- Set 'namespace' with 'a_name'.
      do
        namespace := a_name
      ensure
        namespace_set: namespace = a_name
      end

    set_owner_references (a_name: like owner_references)
        -- Set 'owner_references' with 'a_name'.
      do
        owner_references := a_name
      ensure
        owner_references_set: owner_references = a_name
      end

    set_resource_version (a_name: like resource_version)
        -- Set 'resource_version' with 'a_name'.
      do
        resource_version := a_name
      ensure
        resource_version_set: resource_version = a_name
      end

    set_self_link (a_name: like self_link)
        -- Set 'self_link' with 'a_name'.
      do
        self_link := a_name
      ensure
        self_link_set: self_link = a_name
      end

    set_uid (a_name: like uid)
        -- Set 'uid' with 'a_name'.
      do
        uid := a_name
      ensure
        uid_set: uid = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_APIMACHINERY_PKG_APIS_META_V1_OBJECT_META%N")
        if attached annotations as l_annotations then
          Result.append ("%Nannotations:")
          across l_annotations as ic loop
            Result.append ("%N")
            Result.append ("key:")
            Result.append (ic.key.out)
            Result.append (" - ")
            Result.append ("val:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached cluster_name as l_cluster_name then
          Result.append ("%Ncluster_name:")
          Result.append (l_cluster_name.out)
          Result.append ("%N")
        end
        if attached creation_timestamp as l_creation_timestamp then
          Result.append ("%Ncreation_timestamp:")
          Result.append (l_creation_timestamp.out)
          Result.append ("%N")
        end
        if attached deletion_grace_period_seconds as l_deletion_grace_period_seconds then
          Result.append ("%Ndeletion_grace_period_seconds:")
          Result.append (l_deletion_grace_period_seconds.out)
          Result.append ("%N")
        end
        if attached deletion_timestamp as l_deletion_timestamp then
          Result.append ("%Ndeletion_timestamp:")
          Result.append (l_deletion_timestamp.out)
          Result.append ("%N")
        end
        if attached finalizers as l_finalizers then
          across l_finalizers as ic loop
            Result.append ("%N finalizers:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached generate_name as l_generate_name then
          Result.append ("%Ngenerate_name:")
          Result.append (l_generate_name.out)
          Result.append ("%N")
        end
        if attached generation as l_generation then
          Result.append ("%Ngeneration:")
          Result.append (l_generation.out)
          Result.append ("%N")
        end
        if attached labels as l_labels then
          Result.append ("%Nlabels:")
          across l_labels as ic loop
            Result.append ("%N")
            Result.append ("key:")
            Result.append (ic.key.out)
            Result.append (" - ")
            Result.append ("val:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached managed_fields as l_managed_fields then
          across l_managed_fields as ic loop
            Result.append ("%N managed_fields:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached namespace as l_namespace then
          Result.append ("%Nnamespace:")
          Result.append (l_namespace.out)
          Result.append ("%N")
        end
        if attached owner_references as l_owner_references then
          across l_owner_references as ic loop
            Result.append ("%N owner_references:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached resource_version as l_resource_version then
          Result.append ("%Nresource_version:")
          Result.append (l_resource_version.out)
          Result.append ("%N")
        end
        if attached self_link as l_self_link then
          Result.append ("%Nself_link:")
          Result.append (l_self_link.out)
          Result.append ("%N")
        end
        if attached uid as l_uid then
          Result.append ("%Nuid:")
          Result.append (l_uid.out)
          Result.append ("%N")
        end
      end
end

