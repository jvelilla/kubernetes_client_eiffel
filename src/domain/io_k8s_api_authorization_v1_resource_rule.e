note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_AUTHORIZATION_V1_RESOURCE_RULE




feature --Access

    api_groups: detachable LIST [STRING_32]
      -- APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  \"*\" means all.
    resource_names: detachable LIST [STRING_32]
      -- ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  \"*\" means all.
    resources: detachable LIST [STRING_32]
      -- Resources is a list of resources this rule applies to.  \"*\" means all in the specified apiGroups.  \"*_/foo\" represents the subresource 'foo' for all resources in the specified apiGroups.
    verbs: detachable LIST [STRING_32]
      -- Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  \"*\" means all.

feature -- Change Element

    set_api_groups (a_name: like api_groups)
        -- Set 'api_groups' with 'a_name'.
      do
        api_groups := a_name
      ensure
        api_groups_set: api_groups = a_name
      end

    set_resource_names (a_name: like resource_names)
        -- Set 'resource_names' with 'a_name'.
      do
        resource_names := a_name
      ensure
        resource_names_set: resource_names = a_name
      end

    set_resources (a_name: like resources)
        -- Set 'resources' with 'a_name'.
      do
        resources := a_name
      ensure
        resources_set: resources = a_name
      end

    set_verbs (a_name: like verbs)
        -- Set 'verbs' with 'a_name'.
      do
        verbs := a_name
      ensure
        verbs_set: verbs = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_AUTHORIZATION_V1_RESOURCE_RULE%N")
        if attached api_groups as l_api_groups then
          across l_api_groups as ic loop
            Result.append ("%N api_groups:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached resource_names as l_resource_names then
          across l_resource_names as ic loop
            Result.append ("%N resource_names:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached resources as l_resources then
          across l_resources as ic loop
            Result.append ("%N resources:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached verbs as l_verbs then
          across l_verbs as ic loop
            Result.append ("%N verbs:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

