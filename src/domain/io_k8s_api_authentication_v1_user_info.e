note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_AUTHENTICATION_V1_USER_INFO




feature --Access

    extra: detachable STRING_TABLE [LIST [STRING_32]]
      -- Any additional information provided by the authenticator.
    groups: detachable LIST [STRING_32]
      -- The names of groups this user is a part of.
    uid: detachable STRING_32
      -- A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
    username: detachable STRING_32
      -- The name that uniquely identifies this user among all active users.

feature -- Change Element

    set_extra (a_name: like extra)
        -- Set 'extra' with 'a_name'.
      do
        extra := a_name
      ensure
        extra_set: extra = a_name
      end

    set_groups (a_name: like groups)
        -- Set 'groups' with 'a_name'.
      do
        groups := a_name
      ensure
        groups_set: groups = a_name
      end

    set_uid (a_name: like uid)
        -- Set 'uid' with 'a_name'.
      do
        uid := a_name
      ensure
        uid_set: uid = a_name
      end

    set_username (a_name: like username)
        -- Set 'username' with 'a_name'.
      do
        username := a_name
      ensure
        username_set: username = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_AUTHENTICATION_V1_USER_INFO%N")
        if attached extra as l_extra then
          Result.append ("%Nextra:")
          across l_extra as ic loop
            Result.append ("%N")
            Result.append ("key:")
            Result.append (ic.key.out)
            Result.append (" - ")
            Result.append ("val:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached groups as l_groups then
          across l_groups as ic loop
            Result.append ("%N groups:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached uid as l_uid then
          Result.append ("%Nuid:")
          Result.append (l_uid.out)
          Result.append ("%N")
        end
        if attached username as l_username then
          Result.append ("%Nusername:")
          Result.append (l_username.out)
          Result.append ("%N")
        end
      end
end

