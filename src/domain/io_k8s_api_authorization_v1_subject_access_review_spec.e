note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_AUTHORIZATION_V1_SUBJECT_ACCESS_REVIEW_SPEC




feature --Access

    extra: detachable STRING_TABLE [LIST [STRING_32]]
      -- Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.
    groups: detachable LIST [STRING_32]
      -- Groups is the groups you're testing for.
    non_resource_attributes: detachable IO_K8S_API_AUTHORIZATION_V1_NON_RESOURCE_ATTRIBUTES
      
    resource_attributes: detachable IO_K8S_API_AUTHORIZATION_V1_RESOURCE_ATTRIBUTES
      
    uid: detachable STRING_32
      -- UID information about the requesting user.
    user: detachable STRING_32
      -- User is the user you're testing for. If you specify \"User\" but not \"Groups\", then is it interpreted as \"What if User were not a member of any groups

feature -- Change Element

    set_extra (a_name: like extra)
        -- Set 'extra' with 'a_name'.
      do
        extra := a_name
      ensure
        extra_set: extra = a_name
      end

    set_groups (a_name: like groups)
        -- Set 'groups' with 'a_name'.
      do
        groups := a_name
      ensure
        groups_set: groups = a_name
      end

    set_non_resource_attributes (a_name: like non_resource_attributes)
        -- Set 'non_resource_attributes' with 'a_name'.
      do
        non_resource_attributes := a_name
      ensure
        non_resource_attributes_set: non_resource_attributes = a_name
      end

    set_resource_attributes (a_name: like resource_attributes)
        -- Set 'resource_attributes' with 'a_name'.
      do
        resource_attributes := a_name
      ensure
        resource_attributes_set: resource_attributes = a_name
      end

    set_uid (a_name: like uid)
        -- Set 'uid' with 'a_name'.
      do
        uid := a_name
      ensure
        uid_set: uid = a_name
      end

    set_user (a_name: like user)
        -- Set 'user' with 'a_name'.
      do
        user := a_name
      ensure
        user_set: user = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_AUTHORIZATION_V1_SUBJECT_ACCESS_REVIEW_SPEC%N")
        if attached extra as l_extra then
          Result.append ("%Nextra:")
          across l_extra as ic loop
            Result.append ("%N")
            Result.append ("key:")
            Result.append (ic.key.out)
            Result.append (" - ")
            Result.append ("val:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached groups as l_groups then
          across l_groups as ic loop
            Result.append ("%N groups:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached non_resource_attributes as l_non_resource_attributes then
          Result.append ("%Nnon_resource_attributes:")
          Result.append (l_non_resource_attributes.out)
          Result.append ("%N")
        end
        if attached resource_attributes as l_resource_attributes then
          Result.append ("%Nresource_attributes:")
          Result.append (l_resource_attributes.out)
          Result.append ("%N")
        end
        if attached uid as l_uid then
          Result.append ("%Nuid:")
          Result.append (l_uid.out)
          Result.append ("%N")
        end
        if attached user as l_user then
          Result.append ("%Nuser:")
          Result.append (l_user.out)
          Result.append ("%N")
        end
      end
end

