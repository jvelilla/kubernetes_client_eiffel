note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_NODE_SPEC




feature --Access

    config_source: detachable IO_K8S_API_CORE_V1_NODE_CONFIG_SOURCE
      
    external_id: detachable STRING_32
      -- Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966
    pod_ci_dr: detachable STRING_32
      -- PodCIDR represents the pod IP range assigned to the node.
    pod_ci_drs: detachable LIST [STRING_32]
      -- podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.
    provider_id: detachable STRING_32
      -- ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>
    taints: detachable LIST [IO_K8S_API_CORE_V1_TAINT]
      -- If specified, the node's taints.
 	unschedulable: BOOLEAN
    	 -- Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration

feature -- Change Element

    set_config_source (a_name: like config_source)
        -- Set 'config_source' with 'a_name'.
      do
        config_source := a_name
      ensure
        config_source_set: config_source = a_name
      end

    set_external_id (a_name: like external_id)
        -- Set 'external_id' with 'a_name'.
      do
        external_id := a_name
      ensure
        external_id_set: external_id = a_name
      end

    set_pod_ci_dr (a_name: like pod_ci_dr)
        -- Set 'pod_ci_dr' with 'a_name'.
      do
        pod_ci_dr := a_name
      ensure
        pod_ci_dr_set: pod_ci_dr = a_name
      end

    set_pod_ci_drs (a_name: like pod_ci_drs)
        -- Set 'pod_ci_drs' with 'a_name'.
      do
        pod_ci_drs := a_name
      ensure
        pod_ci_drs_set: pod_ci_drs = a_name
      end

    set_provider_id (a_name: like provider_id)
        -- Set 'provider_id' with 'a_name'.
      do
        provider_id := a_name
      ensure
        provider_id_set: provider_id = a_name
      end

    set_taints (a_name: like taints)
        -- Set 'taints' with 'a_name'.
      do
        taints := a_name
      ensure
        taints_set: taints = a_name
      end

    set_unschedulable (a_name: like unschedulable)
        -- Set 'unschedulable' with 'a_name'.
      do
        unschedulable := a_name
      ensure
        unschedulable_set: unschedulable = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_NODE_SPEC%N")
        if attached config_source as l_config_source then
          Result.append ("%Nconfig_source:")
          Result.append (l_config_source.out)
          Result.append ("%N")
        end
        if attached external_id as l_external_id then
          Result.append ("%Nexternal_id:")
          Result.append (l_external_id.out)
          Result.append ("%N")
        end
        if attached pod_ci_dr as l_pod_ci_dr then
          Result.append ("%Npod_ci_dr:")
          Result.append (l_pod_ci_dr.out)
          Result.append ("%N")
        end
        if attached pod_ci_drs as l_pod_ci_drs then
          across l_pod_ci_drs as ic loop
            Result.append ("%N pod_ci_drs:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached provider_id as l_provider_id then
          Result.append ("%Nprovider_id:")
          Result.append (l_provider_id.out)
          Result.append ("%N")
        end
        if attached taints as l_taints then
          across l_taints as ic loop
            Result.append ("%N taints:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached unschedulable as l_unschedulable then
          Result.append ("%Nunschedulable:")
          Result.append (l_unschedulable.out)
          Result.append ("%N")
        end
      end
end

