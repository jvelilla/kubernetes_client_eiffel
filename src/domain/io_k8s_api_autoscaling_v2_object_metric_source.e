note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_AUTOSCALING_V2_OBJECT_METRIC_SOURCE




feature --Access

    described_object: detachable IO_K8S_API_AUTOSCALING_V2_CROSS_VERSION_OBJECT_REFERENCE
      
    metric: detachable IO_K8S_API_AUTOSCALING_V2_METRIC_IDENTIFIER
      
    target: detachable IO_K8S_API_AUTOSCALING_V2_METRIC_TARGET
      

feature -- Change Element

    set_described_object (a_name: like described_object)
        -- Set 'described_object' with 'a_name'.
      do
        described_object := a_name
      ensure
        described_object_set: described_object = a_name
      end

    set_metric (a_name: like metric)
        -- Set 'metric' with 'a_name'.
      do
        metric := a_name
      ensure
        metric_set: metric = a_name
      end

    set_target (a_name: like target)
        -- Set 'target' with 'a_name'.
      do
        target := a_name
      ensure
        target_set: target = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_AUTOSCALING_V2_OBJECT_METRIC_SOURCE%N")
        if attached described_object as l_described_object then
          Result.append ("%Ndescribed_object:")
          Result.append (l_described_object.out)
          Result.append ("%N")
        end
        if attached metric as l_metric then
          Result.append ("%Nmetric:")
          Result.append (l_metric.out)
          Result.append ("%N")
        end
        if attached target as l_target then
          Result.append ("%Ntarget:")
          Result.append (l_target.out)
          Result.append ("%N")
        end
      end
end

