note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_CEPH_FS_VOLUME_SOURCE




feature --Access

    monitors: detachable LIST [STRING_32]
      -- Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    path: detachable STRING_32
      -- Optional: Used as the mounted root, rather than the full Ceph tree, default is /
 	read_only: BOOLEAN
    	 -- Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secret_file: detachable STRING_32
      -- Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secret_ref: detachable IO_K8S_API_CORE_V1_LOCAL_OBJECT_REFERENCE
      
    user: detachable STRING_32
      -- Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it

feature -- Change Element

    set_monitors (a_name: like monitors)
        -- Set 'monitors' with 'a_name'.
      do
        monitors := a_name
      ensure
        monitors_set: monitors = a_name
      end

    set_path (a_name: like path)
        -- Set 'path' with 'a_name'.
      do
        path := a_name
      ensure
        path_set: path = a_name
      end

    set_read_only (a_name: like read_only)
        -- Set 'read_only' with 'a_name'.
      do
        read_only := a_name
      ensure
        read_only_set: read_only = a_name
      end

    set_secret_file (a_name: like secret_file)
        -- Set 'secret_file' with 'a_name'.
      do
        secret_file := a_name
      ensure
        secret_file_set: secret_file = a_name
      end

    set_secret_ref (a_name: like secret_ref)
        -- Set 'secret_ref' with 'a_name'.
      do
        secret_ref := a_name
      ensure
        secret_ref_set: secret_ref = a_name
      end

    set_user (a_name: like user)
        -- Set 'user' with 'a_name'.
      do
        user := a_name
      ensure
        user_set: user = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_CEPH_FS_VOLUME_SOURCE%N")
        if attached monitors as l_monitors then
          across l_monitors as ic loop
            Result.append ("%N monitors:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached path as l_path then
          Result.append ("%Npath:")
          Result.append (l_path.out)
          Result.append ("%N")
        end
        if attached read_only as l_read_only then
          Result.append ("%Nread_only:")
          Result.append (l_read_only.out)
          Result.append ("%N")
        end
        if attached secret_file as l_secret_file then
          Result.append ("%Nsecret_file:")
          Result.append (l_secret_file.out)
          Result.append ("%N")
        end
        if attached secret_ref as l_secret_ref then
          Result.append ("%Nsecret_ref:")
          Result.append (l_secret_ref.out)
          Result.append ("%N")
        end
        if attached user as l_user then
          Result.append ("%Nuser:")
          Result.append (l_user.out)
          Result.append ("%N")
        end
      end
end

