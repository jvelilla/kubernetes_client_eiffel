note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_NODE_CONFIG_STATUS




feature --Access

    active: detachable IO_K8S_API_CORE_V1_NODE_CONFIG_SOURCE
      
    assigned: detachable IO_K8S_API_CORE_V1_NODE_CONFIG_SOURCE
      
    error: detachable STRING_32
      -- Error describes any problems reconciling the Spec.ConfigSource to the Active config. Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting to load or validate the Assigned config, etc. Errors may occur at different points while syncing config. Earlier errors (e.g. download or checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error by fixing the config assigned in Spec.ConfigSource. You can find additional information for debugging by searching the error message in the Kubelet log. Error is a human-readable description of the error state; machines can check whether or not Error is empty, but should not rely on the stability of the Error text across Kubelet versions.
    last_known_good: detachable IO_K8S_API_CORE_V1_NODE_CONFIG_SOURCE
      

feature -- Change Element

    set_active (a_name: like active)
        -- Set 'active' with 'a_name'.
      do
        active := a_name
      ensure
        active_set: active = a_name
      end

    set_assigned (a_name: like assigned)
        -- Set 'assigned' with 'a_name'.
      do
        assigned := a_name
      ensure
        assigned_set: assigned = a_name
      end

    set_error (a_name: like error)
        -- Set 'error' with 'a_name'.
      do
        error := a_name
      ensure
        error_set: error = a_name
      end

    set_last_known_good (a_name: like last_known_good)
        -- Set 'last_known_good' with 'a_name'.
      do
        last_known_good := a_name
      ensure
        last_known_good_set: last_known_good = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_NODE_CONFIG_STATUS%N")
        if attached active as l_active then
          Result.append ("%Nactive:")
          Result.append (l_active.out)
          Result.append ("%N")
        end
        if attached assigned as l_assigned then
          Result.append ("%Nassigned:")
          Result.append (l_assigned.out)
          Result.append ("%N")
        end
        if attached error as l_error then
          Result.append ("%Nerror:")
          Result.append (l_error.out)
          Result.append ("%N")
        end
        if attached last_known_good as l_last_known_good then
          Result.append ("%Nlast_known_good:")
          Result.append (l_last_known_good.out)
          Result.append ("%N")
        end
      end
end

