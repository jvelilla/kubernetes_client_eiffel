note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_COORDINATION_V1_LEASE_SPEC




feature --Access

    acquire_time: detachable DATE_TIME
      -- MicroTime is version of Time with microsecond level precision.
    holder_identity: detachable STRING_32
      -- holderIdentity contains the identity of the holder of a current lease.
 	lease_duration_seconds: INTEGER_32
    	 -- leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed RenewTime.
 	lease_transitions: INTEGER_32
    	 -- leaseTransitions is the number of transitions of a lease between holders.
    renew_time: detachable DATE_TIME
      -- MicroTime is version of Time with microsecond level precision.

feature -- Change Element

    set_acquire_time (a_name: like acquire_time)
        -- Set 'acquire_time' with 'a_name'.
      do
        acquire_time := a_name
      ensure
        acquire_time_set: acquire_time = a_name
      end

    set_holder_identity (a_name: like holder_identity)
        -- Set 'holder_identity' with 'a_name'.
      do
        holder_identity := a_name
      ensure
        holder_identity_set: holder_identity = a_name
      end

    set_lease_duration_seconds (a_name: like lease_duration_seconds)
        -- Set 'lease_duration_seconds' with 'a_name'.
      do
        lease_duration_seconds := a_name
      ensure
        lease_duration_seconds_set: lease_duration_seconds = a_name
      end

    set_lease_transitions (a_name: like lease_transitions)
        -- Set 'lease_transitions' with 'a_name'.
      do
        lease_transitions := a_name
      ensure
        lease_transitions_set: lease_transitions = a_name
      end

    set_renew_time (a_name: like renew_time)
        -- Set 'renew_time' with 'a_name'.
      do
        renew_time := a_name
      ensure
        renew_time_set: renew_time = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_COORDINATION_V1_LEASE_SPEC%N")
        if attached acquire_time as l_acquire_time then
          Result.append ("%Nacquire_time:")
          Result.append (l_acquire_time.out)
          Result.append ("%N")
        end
        if attached holder_identity as l_holder_identity then
          Result.append ("%Nholder_identity:")
          Result.append (l_holder_identity.out)
          Result.append ("%N")
        end
        if attached lease_duration_seconds as l_lease_duration_seconds then
          Result.append ("%Nlease_duration_seconds:")
          Result.append (l_lease_duration_seconds.out)
          Result.append ("%N")
        end
        if attached lease_transitions as l_lease_transitions then
          Result.append ("%Nlease_transitions:")
          Result.append (l_lease_transitions.out)
          Result.append ("%N")
        end
        if attached renew_time as l_renew_time then
          Result.append ("%Nrenew_time:")
          Result.append (l_renew_time.out)
          Result.append ("%N")
        end
      end
end

