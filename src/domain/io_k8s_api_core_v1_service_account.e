note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_SERVICE_ACCOUNT




feature --Access

    api_version: detachable STRING_32
      -- APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
 	automount_service_account_token: BOOLEAN
    	 -- AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level.
    image_pull_secrets: detachable LIST [IO_K8S_API_CORE_V1_LOCAL_OBJECT_REFERENCE]
      -- ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
    kind: detachable STRING_32
      -- Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata: detachable IO_K8S_APIMACHINERY_PKG_APIS_META_V1_OBJECT_META
      
    secrets: detachable LIST [IO_K8S_API_CORE_V1_OBJECT_REFERENCE]
      -- Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: https://kubernetes.io/docs/concepts/configuration/secret

feature -- Change Element

    set_api_version (a_name: like api_version)
        -- Set 'api_version' with 'a_name'.
      do
        api_version := a_name
      ensure
        api_version_set: api_version = a_name
      end

    set_automount_service_account_token (a_name: like automount_service_account_token)
        -- Set 'automount_service_account_token' with 'a_name'.
      do
        automount_service_account_token := a_name
      ensure
        automount_service_account_token_set: automount_service_account_token = a_name
      end

    set_image_pull_secrets (a_name: like image_pull_secrets)
        -- Set 'image_pull_secrets' with 'a_name'.
      do
        image_pull_secrets := a_name
      ensure
        image_pull_secrets_set: image_pull_secrets = a_name
      end

    set_kind (a_name: like kind)
        -- Set 'kind' with 'a_name'.
      do
        kind := a_name
      ensure
        kind_set: kind = a_name
      end

    set_metadata (a_name: like metadata)
        -- Set 'metadata' with 'a_name'.
      do
        metadata := a_name
      ensure
        metadata_set: metadata = a_name
      end

    set_secrets (a_name: like secrets)
        -- Set 'secrets' with 'a_name'.
      do
        secrets := a_name
      ensure
        secrets_set: secrets = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_SERVICE_ACCOUNT%N")
        if attached api_version as l_api_version then
          Result.append ("%Napi_version:")
          Result.append (l_api_version.out)
          Result.append ("%N")
        end
        if attached automount_service_account_token as l_automount_service_account_token then
          Result.append ("%Nautomount_service_account_token:")
          Result.append (l_automount_service_account_token.out)
          Result.append ("%N")
        end
        if attached image_pull_secrets as l_image_pull_secrets then
          across l_image_pull_secrets as ic loop
            Result.append ("%N image_pull_secrets:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached kind as l_kind then
          Result.append ("%Nkind:")
          Result.append (l_kind.out)
          Result.append ("%N")
        end
        if attached metadata as l_metadata then
          Result.append ("%Nmetadata:")
          Result.append (l_metadata.out)
          Result.append ("%N")
        end
        if attached secrets as l_secrets then
          across l_secrets as ic loop
            Result.append ("%N secrets:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

