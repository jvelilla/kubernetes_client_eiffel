note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_APPS_V1_DAEMON_SET_STATUS




feature --Access

 	collision_count: INTEGER_32
    	 -- Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
    conditions: detachable LIST [IO_K8S_API_APPS_V1_DAEMON_SET_CONDITION]
      -- Represents the latest available observations of a DaemonSet's current state.
 	current_number_scheduled: INTEGER_32
    	 -- The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
 	desired_number_scheduled: INTEGER_32
    	 -- The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
 	number_available: INTEGER_32
    	 -- The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
 	number_misscheduled: INTEGER_32
    	 -- The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
 	number_ready: INTEGER_32
    	 -- numberReady is the number of nodes that should be running the daemon pod and have one or more of the daemon pod running with a Ready Condition.
 	number_unavailable: INTEGER_32
    	 -- The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
 	observed_generation: INTEGER_64
    	 -- The most recent generation observed by the daemon set controller.
 	updated_number_scheduled: INTEGER_32
    	 -- The total number of nodes that are running updated daemon pod

feature -- Change Element

    set_collision_count (a_name: like collision_count)
        -- Set 'collision_count' with 'a_name'.
      do
        collision_count := a_name
      ensure
        collision_count_set: collision_count = a_name
      end

    set_conditions (a_name: like conditions)
        -- Set 'conditions' with 'a_name'.
      do
        conditions := a_name
      ensure
        conditions_set: conditions = a_name
      end

    set_current_number_scheduled (a_name: like current_number_scheduled)
        -- Set 'current_number_scheduled' with 'a_name'.
      do
        current_number_scheduled := a_name
      ensure
        current_number_scheduled_set: current_number_scheduled = a_name
      end

    set_desired_number_scheduled (a_name: like desired_number_scheduled)
        -- Set 'desired_number_scheduled' with 'a_name'.
      do
        desired_number_scheduled := a_name
      ensure
        desired_number_scheduled_set: desired_number_scheduled = a_name
      end

    set_number_available (a_name: like number_available)
        -- Set 'number_available' with 'a_name'.
      do
        number_available := a_name
      ensure
        number_available_set: number_available = a_name
      end

    set_number_misscheduled (a_name: like number_misscheduled)
        -- Set 'number_misscheduled' with 'a_name'.
      do
        number_misscheduled := a_name
      ensure
        number_misscheduled_set: number_misscheduled = a_name
      end

    set_number_ready (a_name: like number_ready)
        -- Set 'number_ready' with 'a_name'.
      do
        number_ready := a_name
      ensure
        number_ready_set: number_ready = a_name
      end

    set_number_unavailable (a_name: like number_unavailable)
        -- Set 'number_unavailable' with 'a_name'.
      do
        number_unavailable := a_name
      ensure
        number_unavailable_set: number_unavailable = a_name
      end

    set_observed_generation (a_name: like observed_generation)
        -- Set 'observed_generation' with 'a_name'.
      do
        observed_generation := a_name
      ensure
        observed_generation_set: observed_generation = a_name
      end

    set_updated_number_scheduled (a_name: like updated_number_scheduled)
        -- Set 'updated_number_scheduled' with 'a_name'.
      do
        updated_number_scheduled := a_name
      ensure
        updated_number_scheduled_set: updated_number_scheduled = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_APPS_V1_DAEMON_SET_STATUS%N")
        if attached collision_count as l_collision_count then
          Result.append ("%Ncollision_count:")
          Result.append (l_collision_count.out)
          Result.append ("%N")
        end
        if attached conditions as l_conditions then
          across l_conditions as ic loop
            Result.append ("%N conditions:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached current_number_scheduled as l_current_number_scheduled then
          Result.append ("%Ncurrent_number_scheduled:")
          Result.append (l_current_number_scheduled.out)
          Result.append ("%N")
        end
        if attached desired_number_scheduled as l_desired_number_scheduled then
          Result.append ("%Ndesired_number_scheduled:")
          Result.append (l_desired_number_scheduled.out)
          Result.append ("%N")
        end
        if attached number_available as l_number_available then
          Result.append ("%Nnumber_available:")
          Result.append (l_number_available.out)
          Result.append ("%N")
        end
        if attached number_misscheduled as l_number_misscheduled then
          Result.append ("%Nnumber_misscheduled:")
          Result.append (l_number_misscheduled.out)
          Result.append ("%N")
        end
        if attached number_ready as l_number_ready then
          Result.append ("%Nnumber_ready:")
          Result.append (l_number_ready.out)
          Result.append ("%N")
        end
        if attached number_unavailable as l_number_unavailable then
          Result.append ("%Nnumber_unavailable:")
          Result.append (l_number_unavailable.out)
          Result.append ("%N")
        end
        if attached observed_generation as l_observed_generation then
          Result.append ("%Nobserved_generation:")
          Result.append (l_observed_generation.out)
          Result.append ("%N")
        end
        if attached updated_number_scheduled as l_updated_number_scheduled then
          Result.append ("%Nupdated_number_scheduled:")
          Result.append (l_updated_number_scheduled.out)
          Result.append ("%N")
        end
      end
end

