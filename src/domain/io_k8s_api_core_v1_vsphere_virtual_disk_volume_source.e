note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_VSPHERE_VIRTUAL_DISK_VOLUME_SOURCE




feature --Access

    fs_type: detachable STRING_32
      -- Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
    storage_policy_id: detachable STRING_32
      -- Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
    storage_policy_name: detachable STRING_32
      -- Storage Policy Based Management (SPBM) profile name.
    volume_path: detachable STRING_32
      -- Path that identifies vSphere volume vmdk

feature -- Change Element

    set_fs_type (a_name: like fs_type)
        -- Set 'fs_type' with 'a_name'.
      do
        fs_type := a_name
      ensure
        fs_type_set: fs_type = a_name
      end

    set_storage_policy_id (a_name: like storage_policy_id)
        -- Set 'storage_policy_id' with 'a_name'.
      do
        storage_policy_id := a_name
      ensure
        storage_policy_id_set: storage_policy_id = a_name
      end

    set_storage_policy_name (a_name: like storage_policy_name)
        -- Set 'storage_policy_name' with 'a_name'.
      do
        storage_policy_name := a_name
      ensure
        storage_policy_name_set: storage_policy_name = a_name
      end

    set_volume_path (a_name: like volume_path)
        -- Set 'volume_path' with 'a_name'.
      do
        volume_path := a_name
      ensure
        volume_path_set: volume_path = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_VSPHERE_VIRTUAL_DISK_VOLUME_SOURCE%N")
        if attached fs_type as l_fs_type then
          Result.append ("%Nfs_type:")
          Result.append (l_fs_type.out)
          Result.append ("%N")
        end
        if attached storage_policy_id as l_storage_policy_id then
          Result.append ("%Nstorage_policy_id:")
          Result.append (l_storage_policy_id.out)
          Result.append ("%N")
        end
        if attached storage_policy_name as l_storage_policy_name then
          Result.append ("%Nstorage_policy_name:")
          Result.append (l_storage_policy_name.out)
          Result.append ("%N")
        end
        if attached volume_path as l_volume_path then
          Result.append ("%Nvolume_path:")
          Result.append (l_volume_path.out)
          Result.append ("%N")
        end
      end
end

