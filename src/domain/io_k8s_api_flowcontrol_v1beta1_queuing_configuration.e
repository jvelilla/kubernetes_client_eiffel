note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_FLOWCONTROL_V1BETA1_QUEUING_CONFIGURATION




feature --Access

 	hand_size: INTEGER_32
    	 -- `handSize` is a small positive number that configures the shuffle sharding of requests into queues.  When enqueuing a request at this priority level the request's flow identifier (a string pair) is hashed and the hash value is used to shuffle the list of queues and deal a hand of the size specified here.  The request is put into one of the shortest queues in that hand. `handSize` must be no larger than `queues`, and should be significantly smaller (so that a few heavy flows do not saturate most of the queues).  See the user-facing documentation for more extensive guidance on setting this field.  This field has a default value of 8.
 	queue_length_limit: INTEGER_32
    	 -- `queueLengthLimit` is the maximum number of requests allowed to be waiting in a given queue of this priority level at a time; excess requests are rejected.  This value must be positive.  If not specified, it will be defaulted to 50.
 	queues: INTEGER_32
    	 -- `queues` is the number of queues for this priority level. The queues exist independently at each apiserver. The value must be positive.  Setting it to 1 effectively precludes shufflesharding and thus makes the distinguisher method of associated flow schemas irrelevant.  This field has a default value of 64.

feature -- Change Element

    set_hand_size (a_name: like hand_size)
        -- Set 'hand_size' with 'a_name'.
      do
        hand_size := a_name
      ensure
        hand_size_set: hand_size = a_name
      end

    set_queue_length_limit (a_name: like queue_length_limit)
        -- Set 'queue_length_limit' with 'a_name'.
      do
        queue_length_limit := a_name
      ensure
        queue_length_limit_set: queue_length_limit = a_name
      end

    set_queues (a_name: like queues)
        -- Set 'queues' with 'a_name'.
      do
        queues := a_name
      ensure
        queues_set: queues = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_FLOWCONTROL_V1BETA1_QUEUING_CONFIGURATION%N")
        if attached hand_size as l_hand_size then
          Result.append ("%Nhand_size:")
          Result.append (l_hand_size.out)
          Result.append ("%N")
        end
        if attached queue_length_limit as l_queue_length_limit then
          Result.append ("%Nqueue_length_limit:")
          Result.append (l_queue_length_limit.out)
          Result.append ("%N")
        end
        if attached queues as l_queues then
          Result.append ("%Nqueues:")
          Result.append (l_queues.out)
          Result.append ("%N")
        end
      end
end

