note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_AUTHENTICATION_V1_TOKEN_REQUEST_SPEC




feature --Access

    audiences: detachable LIST [STRING_32]
      -- Audiences are the intendend audiences of the token. A recipient of a token must identitfy themself with an identifier in the list of audiences of the token, and otherwise should reject the token. A token issued for multiple audiences may be used to authenticate against any of the audiences listed but implies a high degree of trust between the target audiences.
    bound_object_ref: detachable IO_K8S_API_AUTHENTICATION_V1_BOUND_OBJECT_REFERENCE
      
 	expiration_seconds: INTEGER_64
    	 -- ExpirationSeconds is the requested duration of validity of the request. The token issuer may return a token with a different validity duration so a client needs to check the 'expiration' field in a response.

feature -- Change Element

    set_audiences (a_name: like audiences)
        -- Set 'audiences' with 'a_name'.
      do
        audiences := a_name
      ensure
        audiences_set: audiences = a_name
      end

    set_bound_object_ref (a_name: like bound_object_ref)
        -- Set 'bound_object_ref' with 'a_name'.
      do
        bound_object_ref := a_name
      ensure
        bound_object_ref_set: bound_object_ref = a_name
      end

    set_expiration_seconds (a_name: like expiration_seconds)
        -- Set 'expiration_seconds' with 'a_name'.
      do
        expiration_seconds := a_name
      ensure
        expiration_seconds_set: expiration_seconds = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_AUTHENTICATION_V1_TOKEN_REQUEST_SPEC%N")
        if attached audiences as l_audiences then
          across l_audiences as ic loop
            Result.append ("%N audiences:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached bound_object_ref as l_bound_object_ref then
          Result.append ("%Nbound_object_ref:")
          Result.append (l_bound_object_ref.out)
          Result.append ("%N")
        end
        if attached expiration_seconds as l_expiration_seconds then
          Result.append ("%Nexpiration_seconds:")
          Result.append (l_expiration_seconds.out)
          Result.append ("%N")
        end
      end
end

