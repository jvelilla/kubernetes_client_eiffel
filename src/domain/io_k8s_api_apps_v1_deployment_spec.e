note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_APPS_V1_DEPLOYMENT_SPEC




feature --Access

 	min_ready_seconds: INTEGER_32
    	 -- Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
 	paused: BOOLEAN
    	 -- Indicates that the deployment is paused.
 	progress_deadline_seconds: INTEGER_32
    	 -- The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
 	replicas: INTEGER_32
    	 -- Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
 	revision_history_limit: INTEGER_32
    	 -- The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
    selector: detachable IO_K8S_APIMACHINERY_PKG_APIS_META_V1_LABEL_SELECTOR
      
    strategy: detachable IO_K8S_API_APPS_V1_DEPLOYMENT_STRATEGY
      
    template: detachable IO_K8S_API_CORE_V1_POD_TEMPLATE_SPEC
      

feature -- Change Element

    set_min_ready_seconds (a_name: like min_ready_seconds)
        -- Set 'min_ready_seconds' with 'a_name'.
      do
        min_ready_seconds := a_name
      ensure
        min_ready_seconds_set: min_ready_seconds = a_name
      end

    set_paused (a_name: like paused)
        -- Set 'paused' with 'a_name'.
      do
        paused := a_name
      ensure
        paused_set: paused = a_name
      end

    set_progress_deadline_seconds (a_name: like progress_deadline_seconds)
        -- Set 'progress_deadline_seconds' with 'a_name'.
      do
        progress_deadline_seconds := a_name
      ensure
        progress_deadline_seconds_set: progress_deadline_seconds = a_name
      end

    set_replicas (a_name: like replicas)
        -- Set 'replicas' with 'a_name'.
      do
        replicas := a_name
      ensure
        replicas_set: replicas = a_name
      end

    set_revision_history_limit (a_name: like revision_history_limit)
        -- Set 'revision_history_limit' with 'a_name'.
      do
        revision_history_limit := a_name
      ensure
        revision_history_limit_set: revision_history_limit = a_name
      end

    set_selector (a_name: like selector)
        -- Set 'selector' with 'a_name'.
      do
        selector := a_name
      ensure
        selector_set: selector = a_name
      end

    set_strategy (a_name: like strategy)
        -- Set 'strategy' with 'a_name'.
      do
        strategy := a_name
      ensure
        strategy_set: strategy = a_name
      end

    set_template (a_name: like template)
        -- Set 'template' with 'a_name'.
      do
        template := a_name
      ensure
        template_set: template = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_APPS_V1_DEPLOYMENT_SPEC%N")
        if attached min_ready_seconds as l_min_ready_seconds then
          Result.append ("%Nmin_ready_seconds:")
          Result.append (l_min_ready_seconds.out)
          Result.append ("%N")
        end
        if attached paused as l_paused then
          Result.append ("%Npaused:")
          Result.append (l_paused.out)
          Result.append ("%N")
        end
        if attached progress_deadline_seconds as l_progress_deadline_seconds then
          Result.append ("%Nprogress_deadline_seconds:")
          Result.append (l_progress_deadline_seconds.out)
          Result.append ("%N")
        end
        if attached replicas as l_replicas then
          Result.append ("%Nreplicas:")
          Result.append (l_replicas.out)
          Result.append ("%N")
        end
        if attached revision_history_limit as l_revision_history_limit then
          Result.append ("%Nrevision_history_limit:")
          Result.append (l_revision_history_limit.out)
          Result.append ("%N")
        end
        if attached selector as l_selector then
          Result.append ("%Nselector:")
          Result.append (l_selector.out)
          Result.append ("%N")
        end
        if attached strategy as l_strategy then
          Result.append ("%Nstrategy:")
          Result.append (l_strategy.out)
          Result.append ("%N")
        end
        if attached template as l_template then
          Result.append ("%Ntemplate:")
          Result.append (l_template.out)
          Result.append ("%N")
        end
      end
end

