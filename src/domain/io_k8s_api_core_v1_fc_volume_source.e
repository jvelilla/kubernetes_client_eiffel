note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_FC_VOLUME_SOURCE




feature --Access

    fs_type: detachable STRING_32
      -- Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
 	lun: INTEGER_32
    	 -- Optional: FC target lun number
 	read_only: BOOLEAN
    	 -- Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    target_ww_ns: detachable LIST [STRING_32]
      -- Optional: FC target worldwide names (WWNs)
    wwids: detachable LIST [STRING_32]
      -- Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.

feature -- Change Element

    set_fs_type (a_name: like fs_type)
        -- Set 'fs_type' with 'a_name'.
      do
        fs_type := a_name
      ensure
        fs_type_set: fs_type = a_name
      end

    set_lun (a_name: like lun)
        -- Set 'lun' with 'a_name'.
      do
        lun := a_name
      ensure
        lun_set: lun = a_name
      end

    set_read_only (a_name: like read_only)
        -- Set 'read_only' with 'a_name'.
      do
        read_only := a_name
      ensure
        read_only_set: read_only = a_name
      end

    set_target_ww_ns (a_name: like target_ww_ns)
        -- Set 'target_ww_ns' with 'a_name'.
      do
        target_ww_ns := a_name
      ensure
        target_ww_ns_set: target_ww_ns = a_name
      end

    set_wwids (a_name: like wwids)
        -- Set 'wwids' with 'a_name'.
      do
        wwids := a_name
      ensure
        wwids_set: wwids = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_FC_VOLUME_SOURCE%N")
        if attached fs_type as l_fs_type then
          Result.append ("%Nfs_type:")
          Result.append (l_fs_type.out)
          Result.append ("%N")
        end
        if attached lun as l_lun then
          Result.append ("%Nlun:")
          Result.append (l_lun.out)
          Result.append ("%N")
        end
        if attached read_only as l_read_only then
          Result.append ("%Nread_only:")
          Result.append (l_read_only.out)
          Result.append ("%N")
        end
        if attached target_ww_ns as l_target_ww_ns then
          across l_target_ww_ns as ic loop
            Result.append ("%N target_ww_ns:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached wwids as l_wwids then
          across l_wwids as ic loop
            Result.append ("%N wwids:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

