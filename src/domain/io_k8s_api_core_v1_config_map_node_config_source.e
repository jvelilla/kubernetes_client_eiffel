note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_CONFIG_MAP_NODE_CONFIG_SOURCE




feature --Access

    kubelet_config_key: detachable STRING_32
      -- KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.
    name: detachable STRING_32
      -- Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.
    namespace: detachable STRING_32
      -- Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.
    resource_version: detachable STRING_32
      -- ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.
    uid: detachable STRING_32
      -- UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.

feature -- Change Element

    set_kubelet_config_key (a_name: like kubelet_config_key)
        -- Set 'kubelet_config_key' with 'a_name'.
      do
        kubelet_config_key := a_name
      ensure
        kubelet_config_key_set: kubelet_config_key = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_namespace (a_name: like namespace)
        -- Set 'namespace' with 'a_name'.
      do
        namespace := a_name
      ensure
        namespace_set: namespace = a_name
      end

    set_resource_version (a_name: like resource_version)
        -- Set 'resource_version' with 'a_name'.
      do
        resource_version := a_name
      ensure
        resource_version_set: resource_version = a_name
      end

    set_uid (a_name: like uid)
        -- Set 'uid' with 'a_name'.
      do
        uid := a_name
      ensure
        uid_set: uid = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_CONFIG_MAP_NODE_CONFIG_SOURCE%N")
        if attached kubelet_config_key as l_kubelet_config_key then
          Result.append ("%Nkubelet_config_key:")
          Result.append (l_kubelet_config_key.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached namespace as l_namespace then
          Result.append ("%Nnamespace:")
          Result.append (l_namespace.out)
          Result.append ("%N")
        end
        if attached resource_version as l_resource_version then
          Result.append ("%Nresource_version:")
          Result.append (l_resource_version.out)
          Result.append ("%N")
        end
        if attached uid as l_uid then
          Result.append ("%Nuid:")
          Result.append (l_uid.out)
          Result.append ("%N")
        end
      end
end

