note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_GIT_REPO_VOLUME_SOURCE




feature --Access

    directory: detachable STRING_32
      -- Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
    repository: detachable STRING_32
      -- Repository URL
    revision: detachable STRING_32
      -- Commit hash for the specified revision.

feature -- Change Element

    set_directory (a_name: like directory)
        -- Set 'directory' with 'a_name'.
      do
        directory := a_name
      ensure
        directory_set: directory = a_name
      end

    set_repository (a_name: like repository)
        -- Set 'repository' with 'a_name'.
      do
        repository := a_name
      ensure
        repository_set: repository = a_name
      end

    set_revision (a_name: like revision)
        -- Set 'revision' with 'a_name'.
      do
        revision := a_name
      ensure
        revision_set: revision = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_GIT_REPO_VOLUME_SOURCE%N")
        if attached directory as l_directory then
          Result.append ("%Ndirectory:")
          Result.append (l_directory.out)
          Result.append ("%N")
        end
        if attached repository as l_repository then
          Result.append ("%Nrepository:")
          Result.append (l_repository.out)
          Result.append ("%N")
        end
        if attached revision as l_revision then
          Result.append ("%Nrevision:")
          Result.append (l_revision.out)
          Result.append ("%N")
        end
      end
end

