note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_ENDPOINT_SUBSET




feature --Access

    addresses: detachable LIST [IO_K8S_API_CORE_V1_ENDPOINT_ADDRESS]
      -- IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.
    not_ready_addresses: detachable LIST [IO_K8S_API_CORE_V1_ENDPOINT_ADDRESS]
      -- IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.
    ports: detachable LIST [IO_K8S_API_CORE_V1_ENDPOINT_PORT]
      -- Port numbers available on the related IP addresses.

feature -- Change Element

    set_addresses (a_name: like addresses)
        -- Set 'addresses' with 'a_name'.
      do
        addresses := a_name
      ensure
        addresses_set: addresses = a_name
      end

    set_not_ready_addresses (a_name: like not_ready_addresses)
        -- Set 'not_ready_addresses' with 'a_name'.
      do
        not_ready_addresses := a_name
      ensure
        not_ready_addresses_set: not_ready_addresses = a_name
      end

    set_ports (a_name: like ports)
        -- Set 'ports' with 'a_name'.
      do
        ports := a_name
      ensure
        ports_set: ports = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_ENDPOINT_SUBSET%N")
        if attached addresses as l_addresses then
          across l_addresses as ic loop
            Result.append ("%N addresses:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached not_ready_addresses as l_not_ready_addresses then
          across l_not_ready_addresses as ic loop
            Result.append ("%N not_ready_addresses:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached ports as l_ports then
          across l_ports as ic loop
            Result.append ("%N ports:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

