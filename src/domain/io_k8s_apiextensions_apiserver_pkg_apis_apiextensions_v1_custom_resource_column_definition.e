note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_APIEXTENSIONS_APISERVER_PKG_APIS_APIEXTENSIONS_V1_CUSTOM_RESOURCE_COLUMN_DEFINITION




feature --Access

    description: detachable STRING_32
      -- description is a human readable description of this column.
    format: detachable STRING_32
      -- format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
    json_path: detachable STRING_32
      -- jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.
    name: detachable STRING_32
      -- name is a human readable name for the column.
 	priority: INTEGER_32
    	 -- priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.
    type: detachable STRING_32
      -- type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.

feature -- Change Element

    set_description (a_name: like description)
        -- Set 'description' with 'a_name'.
      do
        description := a_name
      ensure
        description_set: description = a_name
      end

    set_format (a_name: like format)
        -- Set 'format' with 'a_name'.
      do
        format := a_name
      ensure
        format_set: format = a_name
      end

    set_json_path (a_name: like json_path)
        -- Set 'json_path' with 'a_name'.
      do
        json_path := a_name
      ensure
        json_path_set: json_path = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_priority (a_name: like priority)
        -- Set 'priority' with 'a_name'.
      do
        priority := a_name
      ensure
        priority_set: priority = a_name
      end

    set_type (a_name: like type)
        -- Set 'type' with 'a_name'.
      do
        type := a_name
      ensure
        type_set: type = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_APIEXTENSIONS_APISERVER_PKG_APIS_APIEXTENSIONS_V1_CUSTOM_RESOURCE_COLUMN_DEFINITION%N")
        if attached description as l_description then
          Result.append ("%Ndescription:")
          Result.append (l_description.out)
          Result.append ("%N")
        end
        if attached format as l_format then
          Result.append ("%Nformat:")
          Result.append (l_format.out)
          Result.append ("%N")
        end
        if attached json_path as l_json_path then
          Result.append ("%Njson_path:")
          Result.append (l_json_path.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached priority as l_priority then
          Result.append ("%Npriority:")
          Result.append (l_priority.out)
          Result.append ("%N")
        end
        if attached type as l_type then
          Result.append ("%Ntype:")
          Result.append (l_type.out)
          Result.append ("%N")
        end
      end
end

