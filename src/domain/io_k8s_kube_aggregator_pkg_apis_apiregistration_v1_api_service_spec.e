note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_KUBE_AGGREGATOR_PKG_APIS_APIREGISTRATION_V1_API_SERVICE_SPEC




feature --Access

    ca_bundle: detachable ARRAY [NATURAL_8]
      -- CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate. If unspecified, system trust roots on the apiserver are used.
    group: detachable STRING_32
      -- Group is the API group name this server hosts
 	group_priority_minimum: INTEGER_32
    	 -- GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s
 	insecure_skip_tl_sverify: BOOLEAN
    	 -- InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead.
    service: detachable IO_K8S_KUBE_AGGREGATOR_PKG_APIS_APIREGISTRATION_V1_SERVICE_REFERENCE
      
    version: detachable STRING_32
      -- Version is the API version this server hosts.  For example, \"v1\"
 	version_priority: INTEGER_32
    	 -- VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.

feature -- Change Element

    set_ca_bundle (a_name: like ca_bundle)
        -- Set 'ca_bundle' with 'a_name'.
      do
        ca_bundle := a_name
      ensure
        ca_bundle_set: ca_bundle = a_name
      end

    set_group (a_name: like group)
        -- Set 'group' with 'a_name'.
      do
        group := a_name
      ensure
        group_set: group = a_name
      end

    set_group_priority_minimum (a_name: like group_priority_minimum)
        -- Set 'group_priority_minimum' with 'a_name'.
      do
        group_priority_minimum := a_name
      ensure
        group_priority_minimum_set: group_priority_minimum = a_name
      end

    set_insecure_skip_tl_sverify (a_name: like insecure_skip_tl_sverify)
        -- Set 'insecure_skip_tl_sverify' with 'a_name'.
      do
        insecure_skip_tl_sverify := a_name
      ensure
        insecure_skip_tl_sverify_set: insecure_skip_tl_sverify = a_name
      end

    set_service (a_name: like service)
        -- Set 'service' with 'a_name'.
      do
        service := a_name
      ensure
        service_set: service = a_name
      end

    set_version (a_name: like version)
        -- Set 'version' with 'a_name'.
      do
        version := a_name
      ensure
        version_set: version = a_name
      end

    set_version_priority (a_name: like version_priority)
        -- Set 'version_priority' with 'a_name'.
      do
        version_priority := a_name
      ensure
        version_priority_set: version_priority = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_KUBE_AGGREGATOR_PKG_APIS_APIREGISTRATION_V1_API_SERVICE_SPEC%N")
        if attached ca_bundle as l_ca_bundle then
          Result.append ("%Nca_bundle:")
          Result.append (l_ca_bundle.out)
          Result.append ("%N")
        end
        if attached group as l_group then
          Result.append ("%Ngroup:")
          Result.append (l_group.out)
          Result.append ("%N")
        end
        if attached group_priority_minimum as l_group_priority_minimum then
          Result.append ("%Ngroup_priority_minimum:")
          Result.append (l_group_priority_minimum.out)
          Result.append ("%N")
        end
        if attached insecure_skip_tl_sverify as l_insecure_skip_tl_sverify then
          Result.append ("%Ninsecure_skip_tl_sverify:")
          Result.append (l_insecure_skip_tl_sverify.out)
          Result.append ("%N")
        end
        if attached service as l_service then
          Result.append ("%Nservice:")
          Result.append (l_service.out)
          Result.append ("%N")
        end
        if attached version as l_version then
          Result.append ("%Nversion:")
          Result.append (l_version.out)
          Result.append ("%N")
        end
        if attached version_priority as l_version_priority then
          Result.append ("%Nversion_priority:")
          Result.append (l_version_priority.out)
          Result.append ("%N")
        end
      end
end

