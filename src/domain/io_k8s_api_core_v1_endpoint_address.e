note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_ENDPOINT_ADDRESS




feature --Access

    hostname: detachable STRING_32
      -- The Hostname of this endpoint
    ip: detachable STRING_32
      -- The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.
    node_name: detachable STRING_32
      -- Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.
    target_ref: detachable IO_K8S_API_CORE_V1_OBJECT_REFERENCE
      

feature -- Change Element

    set_hostname (a_name: like hostname)
        -- Set 'hostname' with 'a_name'.
      do
        hostname := a_name
      ensure
        hostname_set: hostname = a_name
      end

    set_ip (a_name: like ip)
        -- Set 'ip' with 'a_name'.
      do
        ip := a_name
      ensure
        ip_set: ip = a_name
      end

    set_node_name (a_name: like node_name)
        -- Set 'node_name' with 'a_name'.
      do
        node_name := a_name
      ensure
        node_name_set: node_name = a_name
      end

    set_target_ref (a_name: like target_ref)
        -- Set 'target_ref' with 'a_name'.
      do
        target_ref := a_name
      ensure
        target_ref_set: target_ref = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_ENDPOINT_ADDRESS%N")
        if attached hostname as l_hostname then
          Result.append ("%Nhostname:")
          Result.append (l_hostname.out)
          Result.append ("%N")
        end
        if attached ip as l_ip then
          Result.append ("%Nip:")
          Result.append (l_ip.out)
          Result.append ("%N")
        end
        if attached node_name as l_node_name then
          Result.append ("%Nnode_name:")
          Result.append (l_node_name.out)
          Result.append ("%N")
        end
        if attached target_ref as l_target_ref then
          Result.append ("%Ntarget_ref:")
          Result.append (l_target_ref.out)
          Result.append ("%N")
        end
      end
end

