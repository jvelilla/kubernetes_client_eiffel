note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_ADMISSIONREGISTRATION_V1_MUTATING_WEBHOOK




feature --Access

    admission_review_versions: detachable LIST [STRING_32]
      -- AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.
    client_config: detachable IO_K8S_API_ADMISSIONREGISTRATION_V1_WEBHOOK_CLIENT_CONFIG
      
    failure_policy: detachable STRING_32
      -- FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.
    match_policy: detachable STRING_32
      -- matchPolicy defines how the \"rules\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\".  - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.  - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.  Defaults to \"Equivalent\"
    name: detachable STRING_32
      -- The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where \"imagepolicy\" is the name of the webhook, and kubernetes.io is the name of the organization. Required.
    namespace_selector: detachable IO_K8S_APIMACHINERY_PKG_APIS_META_V1_LABEL_SELECTOR
      
    object_selector: detachable IO_K8S_APIMACHINERY_PKG_APIS_META_V1_LABEL_SELECTOR
      
    reinvocation_policy: detachable STRING_32
      -- reinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation. Allowed values are \"Never\" and \"IfNeeded\".  Never: the webhook will not be called more than once in a single admission evaluation.  IfNeeded: the webhook will be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call. Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted. Note: * the number of additional invocations is not guaranteed to be exactly one. * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again. * webhooks that use this option may be reordered to minimize the number of additional invocations. * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.  Defaults to \"Never\".
    rules: detachable LIST [IO_K8S_API_ADMISSIONREGISTRATION_V1_RULE_WITH_OPERATIONS]
      -- Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
    side_effects: detachable STRING_32
      -- SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.
 	timeout_seconds: INTEGER_32
    	 -- TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.

feature -- Change Element

    set_admission_review_versions (a_name: like admission_review_versions)
        -- Set 'admission_review_versions' with 'a_name'.
      do
        admission_review_versions := a_name
      ensure
        admission_review_versions_set: admission_review_versions = a_name
      end

    set_client_config (a_name: like client_config)
        -- Set 'client_config' with 'a_name'.
      do
        client_config := a_name
      ensure
        client_config_set: client_config = a_name
      end

    set_failure_policy (a_name: like failure_policy)
        -- Set 'failure_policy' with 'a_name'.
      do
        failure_policy := a_name
      ensure
        failure_policy_set: failure_policy = a_name
      end

    set_match_policy (a_name: like match_policy)
        -- Set 'match_policy' with 'a_name'.
      do
        match_policy := a_name
      ensure
        match_policy_set: match_policy = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_namespace_selector (a_name: like namespace_selector)
        -- Set 'namespace_selector' with 'a_name'.
      do
        namespace_selector := a_name
      ensure
        namespace_selector_set: namespace_selector = a_name
      end

    set_object_selector (a_name: like object_selector)
        -- Set 'object_selector' with 'a_name'.
      do
        object_selector := a_name
      ensure
        object_selector_set: object_selector = a_name
      end

    set_reinvocation_policy (a_name: like reinvocation_policy)
        -- Set 'reinvocation_policy' with 'a_name'.
      do
        reinvocation_policy := a_name
      ensure
        reinvocation_policy_set: reinvocation_policy = a_name
      end

    set_rules (a_name: like rules)
        -- Set 'rules' with 'a_name'.
      do
        rules := a_name
      ensure
        rules_set: rules = a_name
      end

    set_side_effects (a_name: like side_effects)
        -- Set 'side_effects' with 'a_name'.
      do
        side_effects := a_name
      ensure
        side_effects_set: side_effects = a_name
      end

    set_timeout_seconds (a_name: like timeout_seconds)
        -- Set 'timeout_seconds' with 'a_name'.
      do
        timeout_seconds := a_name
      ensure
        timeout_seconds_set: timeout_seconds = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_ADMISSIONREGISTRATION_V1_MUTATING_WEBHOOK%N")
        if attached admission_review_versions as l_admission_review_versions then
          across l_admission_review_versions as ic loop
            Result.append ("%N admission_review_versions:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached client_config as l_client_config then
          Result.append ("%Nclient_config:")
          Result.append (l_client_config.out)
          Result.append ("%N")
        end
        if attached failure_policy as l_failure_policy then
          Result.append ("%Nfailure_policy:")
          Result.append (l_failure_policy.out)
          Result.append ("%N")
        end
        if attached match_policy as l_match_policy then
          Result.append ("%Nmatch_policy:")
          Result.append (l_match_policy.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached namespace_selector as l_namespace_selector then
          Result.append ("%Nnamespace_selector:")
          Result.append (l_namespace_selector.out)
          Result.append ("%N")
        end
        if attached object_selector as l_object_selector then
          Result.append ("%Nobject_selector:")
          Result.append (l_object_selector.out)
          Result.append ("%N")
        end
        if attached reinvocation_policy as l_reinvocation_policy then
          Result.append ("%Nreinvocation_policy:")
          Result.append (l_reinvocation_policy.out)
          Result.append ("%N")
        end
        if attached rules as l_rules then
          across l_rules as ic loop
            Result.append ("%N rules:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached side_effects as l_side_effects then
          Result.append ("%Nside_effects:")
          Result.append (l_side_effects.out)
          Result.append ("%N")
        end
        if attached timeout_seconds as l_timeout_seconds then
          Result.append ("%Ntimeout_seconds:")
          Result.append (l_timeout_seconds.out)
          Result.append ("%N")
        end
      end
end

