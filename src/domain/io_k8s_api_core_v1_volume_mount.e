note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_VOLUME_MOUNT




feature --Access

    mount_path: detachable STRING_32
      -- Path within the container at which the volume should be mounted.  Must not contain ':'.
    mount_propagation: detachable STRING_32
      -- mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name: detachable STRING_32
      -- This must match the Name of a Volume.
 	read_only: BOOLEAN
    	 -- Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    sub_path: detachable STRING_32
      -- Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).
    sub_path_expr: detachable STRING_32
      -- Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.

feature -- Change Element

    set_mount_path (a_name: like mount_path)
        -- Set 'mount_path' with 'a_name'.
      do
        mount_path := a_name
      ensure
        mount_path_set: mount_path = a_name
      end

    set_mount_propagation (a_name: like mount_propagation)
        -- Set 'mount_propagation' with 'a_name'.
      do
        mount_propagation := a_name
      ensure
        mount_propagation_set: mount_propagation = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_read_only (a_name: like read_only)
        -- Set 'read_only' with 'a_name'.
      do
        read_only := a_name
      ensure
        read_only_set: read_only = a_name
      end

    set_sub_path (a_name: like sub_path)
        -- Set 'sub_path' with 'a_name'.
      do
        sub_path := a_name
      ensure
        sub_path_set: sub_path = a_name
      end

    set_sub_path_expr (a_name: like sub_path_expr)
        -- Set 'sub_path_expr' with 'a_name'.
      do
        sub_path_expr := a_name
      ensure
        sub_path_expr_set: sub_path_expr = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_VOLUME_MOUNT%N")
        if attached mount_path as l_mount_path then
          Result.append ("%Nmount_path:")
          Result.append (l_mount_path.out)
          Result.append ("%N")
        end
        if attached mount_propagation as l_mount_propagation then
          Result.append ("%Nmount_propagation:")
          Result.append (l_mount_propagation.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached read_only as l_read_only then
          Result.append ("%Nread_only:")
          Result.append (l_read_only.out)
          Result.append ("%N")
        end
        if attached sub_path as l_sub_path then
          Result.append ("%Nsub_path:")
          Result.append (l_sub_path.out)
          Result.append ("%N")
        end
        if attached sub_path_expr as l_sub_path_expr then
          Result.append ("%Nsub_path_expr:")
          Result.append (l_sub_path_expr.out)
          Result.append ("%N")
        end
      end
end

