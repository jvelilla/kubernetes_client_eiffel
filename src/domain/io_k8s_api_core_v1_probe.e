note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_PROBE




feature --Access

    exec: detachable IO_K8S_API_CORE_V1_EXEC_ACTION
      
 	failure_threshold: INTEGER_32
    	 -- Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc: detachable IO_K8S_API_CORE_V1_GRPC_ACTION
      
    http_get: detachable IO_K8S_API_CORE_V1_HTTP_GET_ACTION
      
 	initial_delay_seconds: INTEGER_32
    	 -- Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 	period_seconds: INTEGER_32
    	 -- How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
 	success_threshold: INTEGER_32
    	 -- Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcp_socket: detachable IO_K8S_API_CORE_V1_TCP_SOCKET_ACTION
      
 	termination_grace_period_seconds: INTEGER_64
    	 -- Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
 	timeout_seconds: INTEGER_32
    	 -- Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

feature -- Change Element

    set_exec (a_name: like exec)
        -- Set 'exec' with 'a_name'.
      do
        exec := a_name
      ensure
        exec_set: exec = a_name
      end

    set_failure_threshold (a_name: like failure_threshold)
        -- Set 'failure_threshold' with 'a_name'.
      do
        failure_threshold := a_name
      ensure
        failure_threshold_set: failure_threshold = a_name
      end

    set_grpc (a_name: like grpc)
        -- Set 'grpc' with 'a_name'.
      do
        grpc := a_name
      ensure
        grpc_set: grpc = a_name
      end

    set_http_get (a_name: like http_get)
        -- Set 'http_get' with 'a_name'.
      do
        http_get := a_name
      ensure
        http_get_set: http_get = a_name
      end

    set_initial_delay_seconds (a_name: like initial_delay_seconds)
        -- Set 'initial_delay_seconds' with 'a_name'.
      do
        initial_delay_seconds := a_name
      ensure
        initial_delay_seconds_set: initial_delay_seconds = a_name
      end

    set_period_seconds (a_name: like period_seconds)
        -- Set 'period_seconds' with 'a_name'.
      do
        period_seconds := a_name
      ensure
        period_seconds_set: period_seconds = a_name
      end

    set_success_threshold (a_name: like success_threshold)
        -- Set 'success_threshold' with 'a_name'.
      do
        success_threshold := a_name
      ensure
        success_threshold_set: success_threshold = a_name
      end

    set_tcp_socket (a_name: like tcp_socket)
        -- Set 'tcp_socket' with 'a_name'.
      do
        tcp_socket := a_name
      ensure
        tcp_socket_set: tcp_socket = a_name
      end

    set_termination_grace_period_seconds (a_name: like termination_grace_period_seconds)
        -- Set 'termination_grace_period_seconds' with 'a_name'.
      do
        termination_grace_period_seconds := a_name
      ensure
        termination_grace_period_seconds_set: termination_grace_period_seconds = a_name
      end

    set_timeout_seconds (a_name: like timeout_seconds)
        -- Set 'timeout_seconds' with 'a_name'.
      do
        timeout_seconds := a_name
      ensure
        timeout_seconds_set: timeout_seconds = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_PROBE%N")
        if attached exec as l_exec then
          Result.append ("%Nexec:")
          Result.append (l_exec.out)
          Result.append ("%N")
        end
        if attached failure_threshold as l_failure_threshold then
          Result.append ("%Nfailure_threshold:")
          Result.append (l_failure_threshold.out)
          Result.append ("%N")
        end
        if attached grpc as l_grpc then
          Result.append ("%Ngrpc:")
          Result.append (l_grpc.out)
          Result.append ("%N")
        end
        if attached http_get as l_http_get then
          Result.append ("%Nhttp_get:")
          Result.append (l_http_get.out)
          Result.append ("%N")
        end
        if attached initial_delay_seconds as l_initial_delay_seconds then
          Result.append ("%Ninitial_delay_seconds:")
          Result.append (l_initial_delay_seconds.out)
          Result.append ("%N")
        end
        if attached period_seconds as l_period_seconds then
          Result.append ("%Nperiod_seconds:")
          Result.append (l_period_seconds.out)
          Result.append ("%N")
        end
        if attached success_threshold as l_success_threshold then
          Result.append ("%Nsuccess_threshold:")
          Result.append (l_success_threshold.out)
          Result.append ("%N")
        end
        if attached tcp_socket as l_tcp_socket then
          Result.append ("%Ntcp_socket:")
          Result.append (l_tcp_socket.out)
          Result.append ("%N")
        end
        if attached termination_grace_period_seconds as l_termination_grace_period_seconds then
          Result.append ("%Ntermination_grace_period_seconds:")
          Result.append (l_termination_grace_period_seconds.out)
          Result.append ("%N")
        end
        if attached timeout_seconds as l_timeout_seconds then
          Result.append ("%Ntimeout_seconds:")
          Result.append (l_timeout_seconds.out)
          Result.append ("%N")
        end
      end
end

