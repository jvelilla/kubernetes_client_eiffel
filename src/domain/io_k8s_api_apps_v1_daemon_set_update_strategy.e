note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_APPS_V1_DAEMON_SET_UPDATE_STRATEGY




feature --Access

    rolling_update: detachable IO_K8S_API_APPS_V1_ROLLING_UPDATE_DAEMON_SET
      
    type: detachable STRING_32
      -- Type of daemon set update. Can be \"RollingUpdate\" or \"OnDelete\". Default is RollingUpdate.  Possible enum values:  - `\"OnDelete\"` Replace the old daemons only when it's killed  - `\"RollingUpdate\"` Replace the old daemons by new ones using rolling update i.e replace them on each node one after the other.

feature -- Change Element

    set_rolling_update (a_name: like rolling_update)
        -- Set 'rolling_update' with 'a_name'.
      do
        rolling_update := a_name
      ensure
        rolling_update_set: rolling_update = a_name
      end

    set_type (a_name: like type)
        -- Set 'type' with 'a_name'.
      do
        type := a_name
      ensure
        type_set: type = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_APPS_V1_DAEMON_SET_UPDATE_STRATEGY%N")
        if attached rolling_update as l_rolling_update then
          Result.append ("%Nrolling_update:")
          Result.append (l_rolling_update.out)
          Result.append ("%N")
        end
        if attached type as l_type then
          Result.append ("%Ntype:")
          Result.append (l_type.out)
          Result.append ("%N")
        end
      end
end

