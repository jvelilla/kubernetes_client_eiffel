note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_PORTWORX_VOLUME_SOURCE




feature --Access

    fs_type: detachable STRING_32
      -- FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.
 	read_only: BOOLEAN
    	 -- Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    volume_id: detachable STRING_32
      -- VolumeID uniquely identifies a Portworx volume

feature -- Change Element

    set_fs_type (a_name: like fs_type)
        -- Set 'fs_type' with 'a_name'.
      do
        fs_type := a_name
      ensure
        fs_type_set: fs_type = a_name
      end

    set_read_only (a_name: like read_only)
        -- Set 'read_only' with 'a_name'.
      do
        read_only := a_name
      ensure
        read_only_set: read_only = a_name
      end

    set_volume_id (a_name: like volume_id)
        -- Set 'volume_id' with 'a_name'.
      do
        volume_id := a_name
      ensure
        volume_id_set: volume_id = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_PORTWORX_VOLUME_SOURCE%N")
        if attached fs_type as l_fs_type then
          Result.append ("%Nfs_type:")
          Result.append (l_fs_type.out)
          Result.append ("%N")
        end
        if attached read_only as l_read_only then
          Result.append ("%Nread_only:")
          Result.append (l_read_only.out)
          Result.append ("%N")
        end
        if attached volume_id as l_volume_id then
          Result.append ("%Nvolume_id:")
          Result.append (l_volume_id.out)
          Result.append ("%N")
        end
      end
end

