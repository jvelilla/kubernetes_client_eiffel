note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_REPLICATION_CONTROLLER_STATUS




feature --Access

 	available_replicas: INTEGER_32
    	 -- The number of available replicas (ready for at least minReadySeconds) for this replication controller.
    conditions: detachable LIST [IO_K8S_API_CORE_V1_REPLICATION_CONTROLLER_CONDITION]
      -- Represents the latest available observations of a replication controller's current state.
 	fully_labeled_replicas: INTEGER_32
    	 -- The number of pods that have labels matching the labels of the pod template of the replication controller.
 	observed_generation: INTEGER_64
    	 -- ObservedGeneration reflects the generation of the most recently observed replication controller.
 	ready_replicas: INTEGER_32
    	 -- The number of ready replicas for this replication controller.
 	replicas: INTEGER_32
    	 -- Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller

feature -- Change Element

    set_available_replicas (a_name: like available_replicas)
        -- Set 'available_replicas' with 'a_name'.
      do
        available_replicas := a_name
      ensure
        available_replicas_set: available_replicas = a_name
      end

    set_conditions (a_name: like conditions)
        -- Set 'conditions' with 'a_name'.
      do
        conditions := a_name
      ensure
        conditions_set: conditions = a_name
      end

    set_fully_labeled_replicas (a_name: like fully_labeled_replicas)
        -- Set 'fully_labeled_replicas' with 'a_name'.
      do
        fully_labeled_replicas := a_name
      ensure
        fully_labeled_replicas_set: fully_labeled_replicas = a_name
      end

    set_observed_generation (a_name: like observed_generation)
        -- Set 'observed_generation' with 'a_name'.
      do
        observed_generation := a_name
      ensure
        observed_generation_set: observed_generation = a_name
      end

    set_ready_replicas (a_name: like ready_replicas)
        -- Set 'ready_replicas' with 'a_name'.
      do
        ready_replicas := a_name
      ensure
        ready_replicas_set: ready_replicas = a_name
      end

    set_replicas (a_name: like replicas)
        -- Set 'replicas' with 'a_name'.
      do
        replicas := a_name
      ensure
        replicas_set: replicas = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_REPLICATION_CONTROLLER_STATUS%N")
        if attached available_replicas as l_available_replicas then
          Result.append ("%Navailable_replicas:")
          Result.append (l_available_replicas.out)
          Result.append ("%N")
        end
        if attached conditions as l_conditions then
          across l_conditions as ic loop
            Result.append ("%N conditions:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached fully_labeled_replicas as l_fully_labeled_replicas then
          Result.append ("%Nfully_labeled_replicas:")
          Result.append (l_fully_labeled_replicas.out)
          Result.append ("%N")
        end
        if attached observed_generation as l_observed_generation then
          Result.append ("%Nobserved_generation:")
          Result.append (l_observed_generation.out)
          Result.append ("%N")
        end
        if attached ready_replicas as l_ready_replicas then
          Result.append ("%Nready_replicas:")
          Result.append (l_ready_replicas.out)
          Result.append ("%N")
        end
        if attached replicas as l_replicas then
          Result.append ("%Nreplicas:")
          Result.append (l_replicas.out)
          Result.append ("%N")
        end
      end
end

