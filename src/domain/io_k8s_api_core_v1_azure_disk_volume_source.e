note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_AZURE_DISK_VOLUME_SOURCE




feature --Access

    caching_mode: detachable STRING_32
      -- Host Caching mode: None, Read Only, Read Write.
    disk_name: detachable STRING_32
      -- The Name of the data disk in the blob storage
    disk_ur_i: detachable STRING_32
      -- The URI the data disk in the blob storage
    fs_type: detachable STRING_32
      -- Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
    kind: detachable STRING_32
      -- Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
 	read_only: BOOLEAN
    	 -- Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.

feature -- Change Element

    set_caching_mode (a_name: like caching_mode)
        -- Set 'caching_mode' with 'a_name'.
      do
        caching_mode := a_name
      ensure
        caching_mode_set: caching_mode = a_name
      end

    set_disk_name (a_name: like disk_name)
        -- Set 'disk_name' with 'a_name'.
      do
        disk_name := a_name
      ensure
        disk_name_set: disk_name = a_name
      end

    set_disk_ur_i (a_name: like disk_ur_i)
        -- Set 'disk_ur_i' with 'a_name'.
      do
        disk_ur_i := a_name
      ensure
        disk_ur_i_set: disk_ur_i = a_name
      end

    set_fs_type (a_name: like fs_type)
        -- Set 'fs_type' with 'a_name'.
      do
        fs_type := a_name
      ensure
        fs_type_set: fs_type = a_name
      end

    set_kind (a_name: like kind)
        -- Set 'kind' with 'a_name'.
      do
        kind := a_name
      ensure
        kind_set: kind = a_name
      end

    set_read_only (a_name: like read_only)
        -- Set 'read_only' with 'a_name'.
      do
        read_only := a_name
      ensure
        read_only_set: read_only = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_AZURE_DISK_VOLUME_SOURCE%N")
        if attached caching_mode as l_caching_mode then
          Result.append ("%Ncaching_mode:")
          Result.append (l_caching_mode.out)
          Result.append ("%N")
        end
        if attached disk_name as l_disk_name then
          Result.append ("%Ndisk_name:")
          Result.append (l_disk_name.out)
          Result.append ("%N")
        end
        if attached disk_ur_i as l_disk_ur_i then
          Result.append ("%Ndisk_ur_i:")
          Result.append (l_disk_ur_i.out)
          Result.append ("%N")
        end
        if attached fs_type as l_fs_type then
          Result.append ("%Nfs_type:")
          Result.append (l_fs_type.out)
          Result.append ("%N")
        end
        if attached kind as l_kind then
          Result.append ("%Nkind:")
          Result.append (l_kind.out)
          Result.append ("%N")
        end
        if attached read_only as l_read_only then
          Result.append ("%Nread_only:")
          Result.append (l_read_only.out)
          Result.append ("%N")
        end
      end
end

