note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_NETWORKING_V1_NETWORK_POLICY_PORT




feature --Access

 	end_port: INTEGER_32
    	 -- If set, indicates that the range of ports from port to endPort, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port. This feature is in Beta state and is enabled by default. It can be disabled using the Feature Gate \"NetworkPolicyEndPort\".
    port: detachable STRING_32
      -- IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
    protocol: detachable STRING_32
      -- The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.

feature -- Change Element

    set_end_port (a_name: like end_port)
        -- Set 'end_port' with 'a_name'.
      do
        end_port := a_name
      ensure
        end_port_set: end_port = a_name
      end

    set_port (a_name: like port)
        -- Set 'port' with 'a_name'.
      do
        port := a_name
      ensure
        port_set: port = a_name
      end

    set_protocol (a_name: like protocol)
        -- Set 'protocol' with 'a_name'.
      do
        protocol := a_name
      ensure
        protocol_set: protocol = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_NETWORKING_V1_NETWORK_POLICY_PORT%N")
        if attached end_port as l_end_port then
          Result.append ("%Nend_port:")
          Result.append (l_end_port.out)
          Result.append ("%N")
        end
        if attached port as l_port then
          Result.append ("%Nport:")
          Result.append (l_port.out)
          Result.append ("%N")
        end
        if attached protocol as l_protocol then
          Result.append ("%Nprotocol:")
          Result.append (l_protocol.out)
          Result.append ("%N")
        end
      end
end

