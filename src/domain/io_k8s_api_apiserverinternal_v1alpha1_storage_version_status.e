note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_APISERVERINTERNAL_V1ALPHA1_STORAGE_VERSION_STATUS




feature --Access

    common_encoding_version: detachable STRING_32
      -- If all API server instances agree on the same encoding storage version, then this field is set to that version. Otherwise this field is left empty. API servers should finish updating its storageVersionStatus entry before serving write operations, so that this field will be in sync with the reality.
    conditions: detachable LIST [IO_K8S_API_APISERVERINTERNAL_V1ALPHA1_STORAGE_VERSION_CONDITION]
      -- The latest available observations of the storageVersion's state.
    storage_versions: detachable LIST [IO_K8S_API_APISERVERINTERNAL_V1ALPHA1_SERVER_STORAGE_VERSION]
      -- The reported versions per API server instance.

feature -- Change Element

    set_common_encoding_version (a_name: like common_encoding_version)
        -- Set 'common_encoding_version' with 'a_name'.
      do
        common_encoding_version := a_name
      ensure
        common_encoding_version_set: common_encoding_version = a_name
      end

    set_conditions (a_name: like conditions)
        -- Set 'conditions' with 'a_name'.
      do
        conditions := a_name
      ensure
        conditions_set: conditions = a_name
      end

    set_storage_versions (a_name: like storage_versions)
        -- Set 'storage_versions' with 'a_name'.
      do
        storage_versions := a_name
      ensure
        storage_versions_set: storage_versions = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_APISERVERINTERNAL_V1ALPHA1_STORAGE_VERSION_STATUS%N")
        if attached common_encoding_version as l_common_encoding_version then
          Result.append ("%Ncommon_encoding_version:")
          Result.append (l_common_encoding_version.out)
          Result.append ("%N")
        end
        if attached conditions as l_conditions then
          across l_conditions as ic loop
            Result.append ("%N conditions:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached storage_versions as l_storage_versions then
          across l_storage_versions as ic loop
            Result.append ("%N storage_versions:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

