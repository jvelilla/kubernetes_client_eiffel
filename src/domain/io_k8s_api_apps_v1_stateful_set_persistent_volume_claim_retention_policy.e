note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_APPS_V1_STATEFUL_SET_PERSISTENT_VOLUME_CLAIM_RETENTION_POLICY




feature --Access

    when_deleted: detachable STRING_32
      -- WhenDeleted specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is deleted. The default policy of `Retain` causes PVCs to not be affected by StatefulSet deletion. The `Delete` policy causes those PVCs to be deleted.
    when_scaled: detachable STRING_32
      -- WhenScaled specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is scaled down. The default policy of `Retain` causes PVCs to not be affected by a scaledown. The `Delete` policy causes the associated PVCs for any excess pods above the replica count to be deleted.

feature -- Change Element

    set_when_deleted (a_name: like when_deleted)
        -- Set 'when_deleted' with 'a_name'.
      do
        when_deleted := a_name
      ensure
        when_deleted_set: when_deleted = a_name
      end

    set_when_scaled (a_name: like when_scaled)
        -- Set 'when_scaled' with 'a_name'.
      do
        when_scaled := a_name
      ensure
        when_scaled_set: when_scaled = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_APPS_V1_STATEFUL_SET_PERSISTENT_VOLUME_CLAIM_RETENTION_POLICY%N")
        if attached when_deleted as l_when_deleted then
          Result.append ("%Nwhen_deleted:")
          Result.append (l_when_deleted.out)
          Result.append ("%N")
        end
        if attached when_scaled as l_when_scaled then
          Result.append ("%Nwhen_scaled:")
          Result.append (l_when_scaled.out)
          Result.append ("%N")
        end
      end
end

