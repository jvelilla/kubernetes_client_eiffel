note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_SCALE_IO_PERSISTENT_VOLUME_SOURCE




feature --Access

    fs_type: detachable STRING_32
      -- Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\"
    gateway: detachable STRING_32
      -- The host address of the ScaleIO API Gateway.
    protection_domain: detachable STRING_32
      -- The name of the ScaleIO Protection Domain for the configured storage.
 	read_only: BOOLEAN
    	 -- Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secret_ref: detachable IO_K8S_API_CORE_V1_SECRET_REFERENCE
      
 	ssl_enabled: BOOLEAN
    	 -- Flag to enable/disable SSL communication with Gateway, default false
    storage_mode: detachable STRING_32
      -- Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
    storage_pool: detachable STRING_32
      -- The ScaleIO Storage Pool associated with the protection domain.
    system: detachable STRING_32
      -- The name of the storage system as configured in ScaleIO.
    volume_name: detachable STRING_32
      -- The name of a volume already created in the ScaleIO system that is associated with this volume source.

feature -- Change Element

    set_fs_type (a_name: like fs_type)
        -- Set 'fs_type' with 'a_name'.
      do
        fs_type := a_name
      ensure
        fs_type_set: fs_type = a_name
      end

    set_gateway (a_name: like gateway)
        -- Set 'gateway' with 'a_name'.
      do
        gateway := a_name
      ensure
        gateway_set: gateway = a_name
      end

    set_protection_domain (a_name: like protection_domain)
        -- Set 'protection_domain' with 'a_name'.
      do
        protection_domain := a_name
      ensure
        protection_domain_set: protection_domain = a_name
      end

    set_read_only (a_name: like read_only)
        -- Set 'read_only' with 'a_name'.
      do
        read_only := a_name
      ensure
        read_only_set: read_only = a_name
      end

    set_secret_ref (a_name: like secret_ref)
        -- Set 'secret_ref' with 'a_name'.
      do
        secret_ref := a_name
      ensure
        secret_ref_set: secret_ref = a_name
      end

    set_ssl_enabled (a_name: like ssl_enabled)
        -- Set 'ssl_enabled' with 'a_name'.
      do
        ssl_enabled := a_name
      ensure
        ssl_enabled_set: ssl_enabled = a_name
      end

    set_storage_mode (a_name: like storage_mode)
        -- Set 'storage_mode' with 'a_name'.
      do
        storage_mode := a_name
      ensure
        storage_mode_set: storage_mode = a_name
      end

    set_storage_pool (a_name: like storage_pool)
        -- Set 'storage_pool' with 'a_name'.
      do
        storage_pool := a_name
      ensure
        storage_pool_set: storage_pool = a_name
      end

    set_system (a_name: like system)
        -- Set 'system' with 'a_name'.
      do
        system := a_name
      ensure
        system_set: system = a_name
      end

    set_volume_name (a_name: like volume_name)
        -- Set 'volume_name' with 'a_name'.
      do
        volume_name := a_name
      ensure
        volume_name_set: volume_name = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_SCALE_IO_PERSISTENT_VOLUME_SOURCE%N")
        if attached fs_type as l_fs_type then
          Result.append ("%Nfs_type:")
          Result.append (l_fs_type.out)
          Result.append ("%N")
        end
        if attached gateway as l_gateway then
          Result.append ("%Ngateway:")
          Result.append (l_gateway.out)
          Result.append ("%N")
        end
        if attached protection_domain as l_protection_domain then
          Result.append ("%Nprotection_domain:")
          Result.append (l_protection_domain.out)
          Result.append ("%N")
        end
        if attached read_only as l_read_only then
          Result.append ("%Nread_only:")
          Result.append (l_read_only.out)
          Result.append ("%N")
        end
        if attached secret_ref as l_secret_ref then
          Result.append ("%Nsecret_ref:")
          Result.append (l_secret_ref.out)
          Result.append ("%N")
        end
        if attached ssl_enabled as l_ssl_enabled then
          Result.append ("%Nssl_enabled:")
          Result.append (l_ssl_enabled.out)
          Result.append ("%N")
        end
        if attached storage_mode as l_storage_mode then
          Result.append ("%Nstorage_mode:")
          Result.append (l_storage_mode.out)
          Result.append ("%N")
        end
        if attached storage_pool as l_storage_pool then
          Result.append ("%Nstorage_pool:")
          Result.append (l_storage_pool.out)
          Result.append ("%N")
        end
        if attached system as l_system then
          Result.append ("%Nsystem:")
          Result.append (l_system.out)
          Result.append ("%N")
        end
        if attached volume_name as l_volume_name then
          Result.append ("%Nvolume_name:")
          Result.append (l_volume_name.out)
          Result.append ("%N")
        end
      end
end

