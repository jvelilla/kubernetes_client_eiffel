note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_ISCSI_VOLUME_SOURCE




feature --Access

 	chap_auth_discovery: BOOLEAN
    	 -- whether support iSCSI Discovery CHAP authentication
 	chap_auth_session: BOOLEAN
    	 -- whether support iSCSI Session CHAP authentication
    fs_type: detachable STRING_32
      -- Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
    initiator_name: detachable STRING_32
      -- Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
    iqn: detachable STRING_32
      -- Target iSCSI Qualified Name.
    iscsi_interface: detachable STRING_32
      -- iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
 	lun: INTEGER_32
    	 -- iSCSI Target Lun number.
    portals: detachable LIST [STRING_32]
      -- iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
 	read_only: BOOLEAN
    	 -- ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
    secret_ref: detachable IO_K8S_API_CORE_V1_LOCAL_OBJECT_REFERENCE
      
    target_portal: detachable STRING_32
      -- iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).

feature -- Change Element

    set_chap_auth_discovery (a_name: like chap_auth_discovery)
        -- Set 'chap_auth_discovery' with 'a_name'.
      do
        chap_auth_discovery := a_name
      ensure
        chap_auth_discovery_set: chap_auth_discovery = a_name
      end

    set_chap_auth_session (a_name: like chap_auth_session)
        -- Set 'chap_auth_session' with 'a_name'.
      do
        chap_auth_session := a_name
      ensure
        chap_auth_session_set: chap_auth_session = a_name
      end

    set_fs_type (a_name: like fs_type)
        -- Set 'fs_type' with 'a_name'.
      do
        fs_type := a_name
      ensure
        fs_type_set: fs_type = a_name
      end

    set_initiator_name (a_name: like initiator_name)
        -- Set 'initiator_name' with 'a_name'.
      do
        initiator_name := a_name
      ensure
        initiator_name_set: initiator_name = a_name
      end

    set_iqn (a_name: like iqn)
        -- Set 'iqn' with 'a_name'.
      do
        iqn := a_name
      ensure
        iqn_set: iqn = a_name
      end

    set_iscsi_interface (a_name: like iscsi_interface)
        -- Set 'iscsi_interface' with 'a_name'.
      do
        iscsi_interface := a_name
      ensure
        iscsi_interface_set: iscsi_interface = a_name
      end

    set_lun (a_name: like lun)
        -- Set 'lun' with 'a_name'.
      do
        lun := a_name
      ensure
        lun_set: lun = a_name
      end

    set_portals (a_name: like portals)
        -- Set 'portals' with 'a_name'.
      do
        portals := a_name
      ensure
        portals_set: portals = a_name
      end

    set_read_only (a_name: like read_only)
        -- Set 'read_only' with 'a_name'.
      do
        read_only := a_name
      ensure
        read_only_set: read_only = a_name
      end

    set_secret_ref (a_name: like secret_ref)
        -- Set 'secret_ref' with 'a_name'.
      do
        secret_ref := a_name
      ensure
        secret_ref_set: secret_ref = a_name
      end

    set_target_portal (a_name: like target_portal)
        -- Set 'target_portal' with 'a_name'.
      do
        target_portal := a_name
      ensure
        target_portal_set: target_portal = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_ISCSI_VOLUME_SOURCE%N")
        if attached chap_auth_discovery as l_chap_auth_discovery then
          Result.append ("%Nchap_auth_discovery:")
          Result.append (l_chap_auth_discovery.out)
          Result.append ("%N")
        end
        if attached chap_auth_session as l_chap_auth_session then
          Result.append ("%Nchap_auth_session:")
          Result.append (l_chap_auth_session.out)
          Result.append ("%N")
        end
        if attached fs_type as l_fs_type then
          Result.append ("%Nfs_type:")
          Result.append (l_fs_type.out)
          Result.append ("%N")
        end
        if attached initiator_name as l_initiator_name then
          Result.append ("%Ninitiator_name:")
          Result.append (l_initiator_name.out)
          Result.append ("%N")
        end
        if attached iqn as l_iqn then
          Result.append ("%Niqn:")
          Result.append (l_iqn.out)
          Result.append ("%N")
        end
        if attached iscsi_interface as l_iscsi_interface then
          Result.append ("%Niscsi_interface:")
          Result.append (l_iscsi_interface.out)
          Result.append ("%N")
        end
        if attached lun as l_lun then
          Result.append ("%Nlun:")
          Result.append (l_lun.out)
          Result.append ("%N")
        end
        if attached portals as l_portals then
          across l_portals as ic loop
            Result.append ("%N portals:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached read_only as l_read_only then
          Result.append ("%Nread_only:")
          Result.append (l_read_only.out)
          Result.append ("%N")
        end
        if attached secret_ref as l_secret_ref then
          Result.append ("%Nsecret_ref:")
          Result.append (l_secret_ref.out)
          Result.append ("%N")
        end
        if attached target_portal as l_target_portal then
          Result.append ("%Ntarget_portal:")
          Result.append (l_target_portal.out)
          Result.append ("%N")
        end
      end
end

