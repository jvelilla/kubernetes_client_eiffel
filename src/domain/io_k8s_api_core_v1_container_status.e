note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_CONTAINER_STATUS




feature --Access

    container_id: detachable STRING_32
      -- Container's ID in the format 'docker://<container_id>'.
    image: detachable STRING_32
      -- The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images.
    image_id: detachable STRING_32
      -- ImageID of the container's image.
    last_state: detachable IO_K8S_API_CORE_V1_CONTAINER_STATE
      
    name: detachable STRING_32
      -- This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.
 	ready: BOOLEAN
    	 -- Specifies whether the container has passed its readiness probe.
 	restart_count: INTEGER_32
    	 -- The number of times the container has been restarted.
 	started: BOOLEAN
    	 -- Specifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.
    state: detachable IO_K8S_API_CORE_V1_CONTAINER_STATE
      

feature -- Change Element

    set_container_id (a_name: like container_id)
        -- Set 'container_id' with 'a_name'.
      do
        container_id := a_name
      ensure
        container_id_set: container_id = a_name
      end

    set_image (a_name: like image)
        -- Set 'image' with 'a_name'.
      do
        image := a_name
      ensure
        image_set: image = a_name
      end

    set_image_id (a_name: like image_id)
        -- Set 'image_id' with 'a_name'.
      do
        image_id := a_name
      ensure
        image_id_set: image_id = a_name
      end

    set_last_state (a_name: like last_state)
        -- Set 'last_state' with 'a_name'.
      do
        last_state := a_name
      ensure
        last_state_set: last_state = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_ready (a_name: like ready)
        -- Set 'ready' with 'a_name'.
      do
        ready := a_name
      ensure
        ready_set: ready = a_name
      end

    set_restart_count (a_name: like restart_count)
        -- Set 'restart_count' with 'a_name'.
      do
        restart_count := a_name
      ensure
        restart_count_set: restart_count = a_name
      end

    set_started (a_name: like started)
        -- Set 'started' with 'a_name'.
      do
        started := a_name
      ensure
        started_set: started = a_name
      end

    set_state (a_name: like state)
        -- Set 'state' with 'a_name'.
      do
        state := a_name
      ensure
        state_set: state = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_CONTAINER_STATUS%N")
        if attached container_id as l_container_id then
          Result.append ("%Ncontainer_id:")
          Result.append (l_container_id.out)
          Result.append ("%N")
        end
        if attached image as l_image then
          Result.append ("%Nimage:")
          Result.append (l_image.out)
          Result.append ("%N")
        end
        if attached image_id as l_image_id then
          Result.append ("%Nimage_id:")
          Result.append (l_image_id.out)
          Result.append ("%N")
        end
        if attached last_state as l_last_state then
          Result.append ("%Nlast_state:")
          Result.append (l_last_state.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached ready as l_ready then
          Result.append ("%Nready:")
          Result.append (l_ready.out)
          Result.append ("%N")
        end
        if attached restart_count as l_restart_count then
          Result.append ("%Nrestart_count:")
          Result.append (l_restart_count.out)
          Result.append ("%N")
        end
        if attached started as l_started then
          Result.append ("%Nstarted:")
          Result.append (l_started.out)
          Result.append ("%N")
        end
        if attached state as l_state then
          Result.append ("%Nstate:")
          Result.append (l_state.out)
          Result.append ("%N")
        end
      end
end

