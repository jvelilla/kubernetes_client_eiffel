note
 description:"[
		Kubernetes
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: unversioned
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class IO_K8S_API_CORE_V1_TAINT




feature --Access

    effect: detachable STRING_32
      -- Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.  Possible enum values:  - `\"NoExecute\"` Evict any already-running pods that do not tolerate the taint. Currently enforced by NodeController.  - `\"NoSchedule\"` Do not allow new pods to schedule onto the node unless they tolerate the taint, but allow all pods submitted to Kubelet without going through the scheduler to start, and allow all already-running pods to continue running. Enforced by the scheduler.  - `\"PreferNoSchedule\"` Like TaintEffectNoSchedule, but the scheduler tries not to schedule new pods onto the node, rather than prohibiting new pods from scheduling onto the node entirely. Enforced by the scheduler.
    key: detachable STRING_32
      -- Required. The taint key to be applied to a node.
    time_added: detachable DATE_TIME
      -- Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
    value: detachable STRING_32
      -- The taint value corresponding to the taint key.

feature -- Change Element

    set_effect (a_name: like effect)
        -- Set 'effect' with 'a_name'.
      do
        effect := a_name
      ensure
        effect_set: effect = a_name
      end

    set_key (a_name: like key)
        -- Set 'key' with 'a_name'.
      do
        key := a_name
      ensure
        key_set: key = a_name
      end

    set_time_added (a_name: like time_added)
        -- Set 'time_added' with 'a_name'.
      do
        time_added := a_name
      ensure
        time_added_set: time_added = a_name
      end

    set_value (a_name: like value)
        -- Set 'value' with 'a_name'.
      do
        value := a_name
      ensure
        value_set: value = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass IO_K8S_API_CORE_V1_TAINT%N")
        if attached effect as l_effect then
          Result.append ("%Neffect:")
          Result.append (l_effect.out)
          Result.append ("%N")
        end
        if attached key as l_key then
          Result.append ("%Nkey:")
          Result.append (l_key.out)
          Result.append ("%N")
        end
        if attached time_added as l_time_added then
          Result.append ("%Ntime_added:")
          Result.append (l_time_added.out)
          Result.append ("%N")
        end
        if attached value as l_value then
          Result.append ("%Nvalue:")
          Result.append (l_value.out)
          Result.append ("%N")
        end
      end
end

